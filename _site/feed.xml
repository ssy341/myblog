<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://www.thxopen.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.thxopen.com/" rel="alternate" type="text/html" /><updated>2019-04-28T13:52:25+08:00</updated><id>http://www.thxopen.com/feed.xml</id><title type="html">单客欧朋</title><subtitle>好记性不如烂笔头</subtitle><author><name>单思义</name><email>keith@thxopen.com</email></author><entry><title type="html">Caused by: java.lang.ClassNotFoundException: springfox.documentation.service.ApiInfo</title><link href="http://www.thxopen.com/java/exception/2019/04/28/apiinfo-class-not-found.html" rel="alternate" type="text/html" title="Caused by: java.lang.ClassNotFoundException: springfox.documentation.service.ApiInfo" /><published>2019-04-28T00:00:00+08:00</published><updated>2019-04-28T00:00:00+08:00</updated><id>http://www.thxopen.com/java/exception/2019/04/28/apiinfo-class-not-found</id><content type="html" xml:base="http://www.thxopen.com/java/exception/2019/04/28/apiinfo-class-not-found.html">&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;

&lt;p&gt;项目中需要使用swagger提供api文档，于是加上依赖：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.springfox&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;springfox-swagger2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.springfox&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;springfox-swagger-ui&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置swagger扫描的路径：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.builders.ApiInfoBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.builders.ParameterBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.builders.PathSelectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.builders.RequestHandlerSelectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.schema.ModelRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.service.ApiInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.service.Parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.spi.DocumentationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.spring.web.plugins.Docket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;springfox.documentation.swagger2.annotations.EnableSwagger2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * swagger配置
 * &amp;lt;p&amp;gt;
 * 2019年4月28日
 *
 * @author Keith
 * @version v0.0.1
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//开启swagger&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableSwagger2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Swagger2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//在配置文件里设置扫描controller的路径&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${swagger.basePackage}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;basePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Docket&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createRestApi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ParameterBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ticketPar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParameterBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ticketPar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;token&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;modelRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parameterType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//header中的ticket参数非必填，传空也可以&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticketPar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//根据每个方法名也知道当前方法在设置什么参数&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Docket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DocumentationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SWAGGER_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apiInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apiInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestHandlerSelectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;basePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basePackage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PathSelectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//                .globalOperationParameters(pars)  ;  //所有接口请求需要带上的参数&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ApiInfo&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apiInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ApiInfoBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;接口名称)
                .description(&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;接口描述&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;)
                .termsOfServiceUrl(&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;服务&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;)
                .contact(&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;联系人&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;)
                .version(&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;版本号&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;以上配置在另一个项目中是没问题的，我拷贝过来到新的项目上，启动tomcat，结果报如下错误：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Caused by: java.lang.ClassNotFoundException: springfox.documentation.service.ApiInfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;疑问&quot;&gt;疑问&lt;/h2&gt;

&lt;p&gt;intellij idea编译能通过，但是启动tomcat的时候却报类找不到，为什么呢？&lt;/p&gt;

&lt;h2 id=&quot;解决问题&quot;&gt;解决问题&lt;/h2&gt;

&lt;p&gt;我使用的是intellij idea开发，我查看了编译好的war目录，虽然我maven已经引用了依赖，构建也没有问题，但我发现&lt;code class=&quot;highlighter-rouge&quot;&gt;/WEB_INFO/lib&lt;/code&gt;
确实没有swagger的相关jar。&lt;/p&gt;

&lt;p&gt;我把问题锁定到Artifacts配置上，我打开Project Structure -》 Project Settings -》Artifacts 发现Available Elements里面
Swagger相关的jar没有打包war中，所以tomcat启动会提示类找不到。于是选中swagger相关jar，右键&lt;code class=&quot;highlighter-rouge&quot;&gt;put into /WEB_INFO/lib&lt;/code&gt;，
再次启动tomcat，问题得到解决。&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;intellij idea在修改pom.xml后，没有自动把相关的jar构建到war中，导致发布到tomcat里的war缺失相关jar。手动把缺失的jar构建到war中
即可解决问题。&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ClassNotFoundException" /><category term="java" /><category term="swagger" /><category term="intellij idea" /><summary type="html">起因 项目中需要使用swagger提供api文档，于是加上依赖： &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;springfox-swagger2&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;springfox-swagger-ui&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 配置swagger扫描的路径： import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import springfox.documentation.builders.ApiInfoBuilder; import springfox.documentation.builders.ParameterBuilder; import springfox.documentation.builders.PathSelectors; import springfox.documentation.builders.RequestHandlerSelectors; import springfox.documentation.schema.ModelRef; import springfox.documentation.service.ApiInfo; import springfox.documentation.service.Parameter; import springfox.documentation.spi.DocumentationType; import springfox.documentation.spring.web.plugins.Docket; import springfox.documentation.swagger2.annotations.EnableSwagger2; import java.util.ArrayList; import java.util.List; /** * swagger配置 * &amp;lt;p&amp;gt; * 2019年4月28日 * * @author Keith * @version v0.0.1 */ @Configuration //开启swagger @EnableSwagger2 public class Swagger2 { //在配置文件里设置扫描controller的路径 @Value(&quot;${swagger.basePackage}&quot;) String basePackage; @Bean public Docket createRestApi() { ParameterBuilder ticketPar = new ParameterBuilder(); List&amp;lt;Parameter&amp;gt; pars = new ArrayList&amp;lt;Parameter&amp;gt;(); ticketPar.name(&quot;Authorization&quot;).description(&quot;token&quot;) .modelRef(new ModelRef(&quot;string&quot;)).parameterType(&quot;header&quot;) .required(true).build(); //header中的ticket参数非必填，传空也可以 pars.add(ticketPar.build()); //根据每个方法名也知道当前方法在设置什么参数 return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.basePackage(basePackage)) .paths(PathSelectors.any()) .build(); // .globalOperationParameters(pars) ; //所有接口请求需要带上的参数 } private ApiInfo apiInfo() { return new ApiInfoBuilder() .title(&quot;接口名称) .description(&quot;接口描述&quot;) .termsOfServiceUrl(&quot;服务url&quot;) .contact(&quot;联系人&quot;) .version(&quot;版本号&quot;) .build(); } } 以上配置在另一个项目中是没问题的，我拷贝过来到新的项目上，启动tomcat，结果报如下错误： Caused by: java.lang.ClassNotFoundException: springfox.documentation.service.ApiInfo 疑问 intellij idea编译能通过，但是启动tomcat的时候却报类找不到，为什么呢？ 解决问题 我使用的是intellij idea开发，我查看了编译好的war目录，虽然我maven已经引用了依赖，构建也没有问题，但我发现/WEB_INFO/lib 确实没有swagger的相关jar。 我把问题锁定到Artifacts配置上，我打开Project Structure -》 Project Settings -》Artifacts 发现Available Elements里面 Swagger相关的jar没有打包war中，所以tomcat启动会提示类找不到。于是选中swagger相关jar，右键put into /WEB_INFO/lib， 再次启动tomcat，问题得到解决。 总结 intellij idea在修改pom.xml后，没有自动把相关的jar构建到war中，导致发布到tomcat里的war缺失相关jar。手动把缺失的jar构建到war中 即可解决问题。</summary></entry><entry><title type="html">使用Docker安装oracle 11g</title><link href="http://www.thxopen.com/linux/docker/2019/04/17/install-oracle11g-on-docker.html" rel="alternate" type="text/html" title="使用Docker安装oracle 11g" /><published>2019-04-17T00:00:00+08:00</published><updated>2019-04-17T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/docker/2019/04/17/install-oracle11g-on-docker</id><content type="html" xml:base="http://www.thxopen.com/linux/docker/2019/04/17/install-oracle11g-on-docker.html">&lt;h2 id=&quot;一简介&quot;&gt;一，简介&lt;/h2&gt;

&lt;p&gt;Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系数据库管理系统。&lt;/p&gt;

&lt;p&gt;借助docker，安装oracle不再困难，只需要几步即可。&lt;/p&gt;

&lt;p&gt;需要注意，在参考本文章之前，需要具备操作docker的基础，怎么使用docker，可以参考&lt;a href=&quot;&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;二安装&quot;&gt;二，安装&lt;/h2&gt;

&lt;h3 id=&quot;21安装oracle-11g镜像到docker&quot;&gt;2.1、安装oracle 11g镜像到docker&lt;/h3&gt;

&lt;h4 id=&quot;211搜索符合条件的镜像&quot;&gt;2.1.1、搜索符合条件的镜像&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker search oracle

NAME                                  DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
oraclelinux                           Official Docker builds of Oracle Linux.         573                 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]
jaspeen/oracle-11g                    Docker image &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Oracle 11g database            99                                      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]
oracle/openjdk                        Docker images containing OpenJDK Oracle Linux   55                                      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OK]
……
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;212选择安装-jaspeenoracle-11g等待下载安装完成&quot;&gt;2.1.2、选择安装 jaspeen/oracle-11g，等待下载安装完成&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull jaspeen/oracle-11g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;213查看下载好的镜像&quot;&gt;2.1.3、查看下载好的镜像&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker images

REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE
jaspeen/oracle-11g         latest              0c8711fe4f0f        3 years ago         281MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意，这个镜像没有直接安装好oracle，他帮我们配置好了环境，提供了安装脚本，我们只需要按照要求把oracle的安装目录配置好，启动镜像，即可&lt;/p&gt;

&lt;h3 id=&quot;22准备oracle-11g安装文件&quot;&gt;2.2、准备oracle 11g安装文件&lt;/h3&gt;

&lt;h4 id=&quot;221下载oracle-11g安装文件&quot;&gt;2.2.1、下载oracle 11g安装文件&lt;/h4&gt;
&lt;p&gt;从&lt;a href=&quot;http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index-092322.html&quot;&gt;oracle 官网&lt;/a&gt;
下载所需要的安装包，这里我们以&lt;a href=&quot;https://www.oracle.com/technetwork/database/enterprise-edition/downloads/112010-linx8664soft-100572.html&quot;&gt;oracle 11g&lt;/a&gt;
为例子，分别下载 &lt;code class=&quot;highlighter-rouge&quot;&gt;linux.x64_11gR2_database_1of2.zip&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;linux.x64_11gR2_database_2of2.zip&lt;/code&gt;两个压缩包，下载完成后解压到D盘
(如下目录结构)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D:.
└─oracleinstall
    └─database
        ├─doc
        ├─install
        ├─response
        ├─rpm
        ├─sshsetup
        ├─stage
        ├─runInstaller
        └─welcome.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;23安装oracle&quot;&gt;2.3、安装oracle&lt;/h3&gt;

&lt;h4 id=&quot;231注意事项&quot;&gt;2.3.1、注意事项&lt;/h4&gt;
&lt;p&gt;为什么要解压成上面的目录结构，我们先来看看&lt;code class=&quot;highlighter-rouge&quot;&gt;jaspeen/oracle-11g&lt;/code&gt;镜像提供的安装脚本&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /assets/colorecho

&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;echo_red '******* ERROR: Something went wrong.'; exit 1&quot;&lt;/span&gt; SIGTERM
&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;echo_red '******* Caught SIGINT signal. Stopping...'; exit 2&quot;&lt;/span&gt; SIGINT

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/install/database&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;echo_red &lt;span class=&quot;s2&quot;&gt;&quot;Installation files not found. Unzip installation files into mounted(/install) folder&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;echo_yellow &lt;span class=&quot;s2&quot;&gt;&quot;Installing Oracle Database 11g&quot;&lt;/span&gt;

su oracle &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/install/database/runInstaller -silent -ignorePrereq -waitforcompletion -responseFile /assets/db_install.rsp&quot;&lt;/span&gt;
/opt/oracle/oraInventory/orainstRoot.sh
/opt/oracle/app/product/11.2.0/dbhome_1/root.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从脚本里可以看到它会读取&lt;code class=&quot;highlighter-rouge&quot;&gt;/install/database&lt;/code&gt;目录，如果不存在会给出提示&lt;code class=&quot;highlighter-rouge&quot;&gt;Installation files not found. Unzip installation files into mounted(/install) folder&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;232启动镜像执行安装oracle&quot;&gt;2.3.2、启动镜像（执行安装oracle）&lt;/h4&gt;

&lt;p&gt;命令的解释：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker run 启动容器的命令&lt;/li&gt;
  &lt;li&gt;privileged 给这个容器特权，安装oracle可能需要操作需要root权限的文件或目录&lt;/li&gt;
  &lt;li&gt;name 给这个容器名一个名字&lt;/li&gt;
  &lt;li&gt;p 映射端口&lt;/li&gt;
  &lt;li&gt;v 挂在文件到容器指定目录 (&lt;code class=&quot;highlighter-rouge&quot;&gt;d:/oracleinstall/database&lt;/code&gt; 对应容器 &lt;code class=&quot;highlighter-rouge&quot;&gt;/install/database&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;jaspeen/oracle-11g 代表启动指定的容器&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--privileged&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; oracle11g &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 1521:1521 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; d:/oracleinstall:/install jaspeen/oracle-11g

Database is not installed. Installing...
Installing Oracle Database 11g
Starting Oracle Universal Installer...

Checking Temp space: must be greater than 120 MB.   Actual 47303 MB    Passed
Checking swap space: must be greater than 150 MB.   Actual 1023 MB    Passed
Preparing to launch Oracle Universal Installer from /tmp/OraInstall2019-04-17_08-14-23AM. Please &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; ...
You can find the log of this &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;session at:
 /opt/oracle/oraInventory/logs/installActions2019-04-17_08-14-23AM.log
 ……
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个安装过程会很漫长，日志也很多，这里只提供部分。注意到日志里有 &lt;code class=&quot;highlighter-rouge&quot;&gt;100% complete&lt;/code&gt; 打印，代表oracle安装成功&lt;/p&gt;

&lt;h4 id=&quot;233安装完成&quot;&gt;2.3.3、安装完成&lt;/h4&gt;

&lt;p&gt;再次查看运行状态，oracle已经启动完成&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;

CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                      PORTS                                                                             NAMES
7f53f07c93e5        jaspeen/oracle-11g   &lt;span class=&quot;s2&quot;&gt;&quot;/assets/entrypoint.…&quot;&lt;/span&gt;   About an hour ago   Up About an hour            0.0.0.0:1521-&amp;gt;1521/tcp, 8080/tcp                                                  oracle11g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;234其他需要注意的如果日志长时间没有更新检查docker是否已经死掉&quot;&gt;2.3.4、其他需要注意的，如果日志长时间没有更新，检查docker是否已经死掉&lt;/h4&gt;

&lt;p&gt;查看docker的状态&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error response from daemon: An invalid argument was supplied.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果出现如上提示，表示docker已经死掉，我们只需要重新执行安装步骤，让oracle安装完成&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ps:根据我的猜测，我给docker分配的资源不够导致的，我重新把docker的内存和cpu调高一点后oracle顺利安装完成。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;oracle11g
docker run &lt;span class=&quot;nt&quot;&gt;--privileged&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; oracle11g &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 1521:1521 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; oracleinstall:/install jaspeen/oracle-11g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;三配置&quot;&gt;三，配置&lt;/h2&gt;

&lt;p&gt;默认scott用户是被锁定的，我们需要解锁，通过数据库工具即可成功连接到oracle&lt;/p&gt;

&lt;h3 id=&quot;31连接到容器&quot;&gt;3.1，连接到容器，&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; oracle11g /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;32切换到oracle用户然后连接到sql控制台&quot;&gt;3.2，切换到oracle用户，然后连接到sql控制台&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@7f53f07c93e5 /]# su - oracle
Last login: Wed Apr 17 08:29:31 UTC 2019
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;oracle@7f53f07c93e5 ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sqlplus / as sysdba

SQL&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Plus: Release 11.2.0.1.0 Production on Wed Apr 17 09:29:49 2019

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1982, 2009, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;33解锁账户&quot;&gt;3.3，解锁账户&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SQL&amp;gt; alter user scott account unlock&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
User altered.
SQL&amp;gt; commit&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Commit complete.
SQL&amp;gt; conn scott/tiger
ERROR:
ORA-28001: the password has expired
Changing password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;scott
New password:
Retype new password:
Password changed
Connected.
SQL&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;34使用datagrip连接oracle数据库&quot;&gt;3.4，使用dataGrip连接oracle数据库&lt;/h3&gt;
&lt;p&gt;数据库安装完成后，使用默认的sid为orcl，端口为1521，scott/tiger即可连接
&lt;img src=&quot;/assets/images/post/linux/docker/datagrip-oracle.png&quot; alt=&quot;datagrid连接oracle&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://zh.wikipedia.org/wiki/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93&lt;/li&gt;
    &lt;li&gt;https://hub.docker.com/r/jaspeen/oracle-11g&lt;/li&gt;
    &lt;li&gt;https://stackoverflow.com/questions/37468788/what-is-the-right-way-to-add-data-to-an-existing-named-volume-in-docker&lt;/li&gt;
    &lt;li&gt;https://hub.docker.com/_/busybox&lt;/li&gt;
    &lt;li&gt;http://blog.grayidea.cn/archives/67&lt;/li&gt;
    &lt;li&gt;https://blog.csdn.net/u013238950/article/details/50999401&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="oracle 11g" /><category term="docker" /><summary type="html">一，简介 Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系数据库管理系统。 借助docker，安装oracle不再困难，只需要几步即可。 需要注意，在参考本文章之前，需要具备操作docker的基础，怎么使用docker，可以参考这里 二，安装 2.1、安装oracle 11g镜像到docker 2.1.1、搜索符合条件的镜像 docker search oracle NAME DESCRIPTION STARS OFFICIAL AUTOMATED oraclelinux Official Docker builds of Oracle Linux. 573 [OK] jaspeen/oracle-11g Docker image for Oracle 11g database 99 [OK] oracle/openjdk Docker images containing OpenJDK Oracle Linux 55 [OK] …… 2.1.2、选择安装 jaspeen/oracle-11g，等待下载安装完成 docker pull jaspeen/oracle-11g 2.1.3、查看下载好的镜像 docker images REPOSITORY TAG IMAGE ID CREATED SIZE jaspeen/oracle-11g latest 0c8711fe4f0f 3 years ago 281MB 注意，这个镜像没有直接安装好oracle，他帮我们配置好了环境，提供了安装脚本，我们只需要按照要求把oracle的安装目录配置好，启动镜像，即可 2.2、准备oracle 11g安装文件 2.2.1、下载oracle 11g安装文件 从oracle 官网 下载所需要的安装包，这里我们以oracle 11g 为例子，分别下载 linux.x64_11gR2_database_1of2.zip 和 linux.x64_11gR2_database_2of2.zip两个压缩包，下载完成后解压到D盘 (如下目录结构) D:. └─oracleinstall └─database ├─doc ├─install ├─response ├─rpm ├─sshsetup ├─stage ├─runInstaller └─welcome.html 2.3、安装oracle 2.3.1、注意事项 为什么要解压成上面的目录结构，我们先来看看jaspeen/oracle-11g镜像提供的安装脚本 #!/usr/bin/env bash set -e source /assets/colorecho trap &quot;echo_red '******* ERROR: Something went wrong.'; exit 1&quot; SIGTERM trap &quot;echo_red '******* Caught SIGINT signal. Stopping...'; exit 2&quot; SIGINT if [ ! -d &quot;/install/database&quot; ]; then echo_red &quot;Installation files not found. Unzip installation files into mounted(/install) folder&quot; exit 1 fi echo_yellow &quot;Installing Oracle Database 11g&quot; su oracle -c &quot;/install/database/runInstaller -silent -ignorePrereq -waitforcompletion -responseFile /assets/db_install.rsp&quot; /opt/oracle/oraInventory/orainstRoot.sh /opt/oracle/app/product/11.2.0/dbhome_1/root.sh 从脚本里可以看到它会读取/install/database目录，如果不存在会给出提示Installation files not found. Unzip installation files into mounted(/install) folder 2.3.2、启动镜像（执行安装oracle） 命令的解释： docker run 启动容器的命令 privileged 给这个容器特权，安装oracle可能需要操作需要root权限的文件或目录 name 给这个容器名一个名字 p 映射端口 v 挂在文件到容器指定目录 (d:/oracleinstall/database 对应容器 /install/database) jaspeen/oracle-11g 代表启动指定的容器 docker run --privileged --name oracle11g -p 1521:1521 -v d:/oracleinstall:/install jaspeen/oracle-11g Database is not installed. Installing... Installing Oracle Database 11g Starting Oracle Universal Installer... Checking Temp space: must be greater than 120 MB. Actual 47303 MB Passed Checking swap space: must be greater than 150 MB. Actual 1023 MB Passed Preparing to launch Oracle Universal Installer from /tmp/OraInstall2019-04-17_08-14-23AM. Please wait ... You can find the log of this install session at: /opt/oracle/oraInventory/logs/installActions2019-04-17_08-14-23AM.log …… 这个安装过程会很漫长，日志也很多，这里只提供部分。注意到日志里有 100% complete 打印，代表oracle安装成功 2.3.3、安装完成 再次查看运行状态，oracle已经启动完成 docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 7f53f07c93e5 jaspeen/oracle-11g &quot;/assets/entrypoint.…&quot; About an hour ago Up About an hour 0.0.0.0:1521-&amp;gt;1521/tcp, 8080/tcp oracle11g 2.3.4、其他需要注意的，如果日志长时间没有更新，检查docker是否已经死掉 查看docker的状态 docker ps -a Error response from daemon: An invalid argument was supplied. 如果出现如上提示，表示docker已经死掉，我们只需要重新执行安装步骤，让oracle安装完成 ps:根据我的猜测，我给docker分配的资源不够导致的，我重新把docker的内存和cpu调高一点后oracle顺利安装完成。 docker rm oracle11g docker run --privileged --name oracle11g -p 1521:1521 -v oracleinstall:/install jaspeen/oracle-11g 三，配置 默认scott用户是被锁定的，我们需要解锁，通过数据库工具即可成功连接到oracle 3.1，连接到容器， docker exec -it oracle11g /bin/bash 3.2，切换到oracle用户，然后连接到sql控制台 [root@7f53f07c93e5 /]# su - oracle Last login: Wed Apr 17 08:29:31 UTC 2019 [oracle@7f53f07c93e5 ~]$ sqlplus / as sysdba SQL*Plus: Release 11.2.0.1.0 Production on Wed Apr 17 09:29:49 2019 Copyright (c) 1982, 2009, Oracle. All rights reserved. Connected to: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production With the Partitioning, OLAP, Data Mining and Real Application Testing options SQL&amp;gt; 3.3，解锁账户 SQL&amp;gt; alter user scott account unlock; User altered. SQL&amp;gt; commit; Commit complete. SQL&amp;gt; conn scott/tiger ERROR: ORA-28001: the password has expired Changing password for scott New password: Retype new password: Password changed Connected. SQL&amp;gt; 3.4，使用dataGrip连接oracle数据库 数据库安装完成后，使用默认的sid为orcl，端口为1521，scott/tiger即可连接 Reference: https://zh.wikipedia.org/wiki/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93 https://hub.docker.com/r/jaspeen/oracle-11g https://stackoverflow.com/questions/37468788/what-is-the-right-way-to-add-data-to-an-existing-named-volume-in-docker https://hub.docker.com/_/busybox http://blog.grayidea.cn/archives/67 https://blog.csdn.net/u013238950/article/details/50999401</summary></entry><entry><title type="html">使用logback限制日志打印内容长度</title><link href="http://www.thxopen.com/java/2019/04/12/limit-message-size-in-logback.html" rel="alternate" type="text/html" title="使用logback限制日志打印内容长度" /><published>2019-04-12T00:00:00+08:00</published><updated>2019-04-12T00:00:00+08:00</updated><id>http://www.thxopen.com/java/2019/04/12/limit-message-size-in-logback</id><content type="html" xml:base="http://www.thxopen.com/java/2019/04/12/limit-message-size-in-logback.html">&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;好的日志打印，对于程序的调试和查找问题是很重要的。目前广泛使用的是logback，配合&lt;a href=&quot;//projectlombok.org&quot;&gt;lombok&lt;/a&gt;可以很方便
的打印日志。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Slf4j&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogExampleOther&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Something else is wrong here&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;只需要在类上加上&lt;code class=&quot;highlighter-rouge&quot;&gt;@Slf4j&lt;/code&gt;注解即可&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;问题背景&quot;&gt;问题背景&lt;/h2&gt;

&lt;p&gt;由于在实际开发过程中打印日志内容的长度是不可控的，我想在输出的时候控制内容长度，于是我书写如下代码：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Slf4j&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogExampleOther&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something else is wrong here&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;the content length over limit ，only show the part of front : {} &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;the content is {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;

&lt;p&gt;时隔多日，发现这样非常不友好，随着需要控制的地方越来越多，这个代码重复出现在项目的各个地方。我想有没有什么配置可以设置日志
输出的最大长度呢？一番搜索后最终在&lt;a href=&quot;https://logback.qos.ch/manual/layouts.html#formatModifiers&quot;&gt;logback的文档&lt;/a&gt;里找到了答案，原来官方已经提供了方法。&lt;/p&gt;

&lt;p&gt;以下是文档原文：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By default the relevant information is output as-is. However, with the aid of format modifiers it is possible to change 
the minimum and maximum width and the justifications of each data field.&lt;/p&gt;

  &lt;p&gt;The optional format modifier is placed between the percent sign and the conversion character or word.&lt;/p&gt;

  &lt;p&gt;The first optional format modifier is the left justification flag which is just the minus (-) character. 
Then comes the optional minimum field width modifier. This is a decimal constant that represents the minimum number of 
characters to output. If the data item contains fewer characters, it is padded on either the left or the right until 
the minimum width is reached. The default is to pad on the left (right justify) but you can specify right padding with 
the left justification flag. The padding character is space. If the data item is larger than the minimum field width, 
the field is expanded to accommodate the data. The value is never truncated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;默认情况下输出给定的字符串，但借助修饰符可以配置最小和最大长度。在%和转换字符之间使用&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;（点）和&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;（减号）截断字符串&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%-4relative [%thread] %-5level - %.-1024msg%n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;上面的输出模板会把超过1024个字符的输出截断，只显示前1024个字符。&lt;/p&gt;

&lt;p&gt;最终通过查询文档解决了我以前的疑问，让代码更加简洁。&lt;/p&gt;

&lt;h2 id=&quot;logback的转换符对照表&quot;&gt;logback的转换符对照表&lt;/h2&gt;

&lt;p&gt;为了配置适合自己的日志格式，我们必须弄清楚转换字符的意思，下面附一张logback的转换符对照表&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;转换字符&lt;/th&gt;
      &lt;th&gt;效果&lt;/th&gt;
      &lt;th&gt;解释&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;c{length}  &lt;br /&gt; lo{length} &lt;br /&gt;  logger{length}&lt;/td&gt;
      &lt;td&gt;%logger mainPackage.sub.sample.Bar mainPackage.sub.sample.Bar&lt;/td&gt;
      &lt;td&gt;原始记录器名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;%logger{5} mainPackage.sub.sample.Bar m.s.s.Bar&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C{length} &lt;br /&gt;  class{length}&lt;/td&gt;
      &lt;td&gt;%C mainPackage.sub.sample.Bar mainPackage.sub.sample.Bar&lt;/td&gt;
      &lt;td&gt;记录器所在类的全路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;contextName/cn&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;原始记录器上下文名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;d{pattern} &lt;br /&gt;  date{pattern} &lt;br /&gt;  d{pattern, timezone}  &lt;br /&gt; date{pattern, timezone}&lt;/td&gt;
      &lt;td&gt;%d 2019-4-12 18:01:54,123&lt;/td&gt;
      &lt;td&gt;日志打印时间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;%date{HH:mm:ss.SSS} 18:01:54.123&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;F/file&lt;/td&gt;
      &lt;td&gt;%F Bar.java&lt;/td&gt;
      &lt;td&gt;java文件名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;caller{depth}&lt;br /&gt; caller{depthStart..depthEnd} &lt;br /&gt; caller{depth, evaluator-1, … evaluator-n} &lt;br /&gt; caller{depthStart..depthEnd, evaluator-1, … evaluator-n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;记录器调用者位置信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L / line&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;日志输出所在文件的行号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;m / msg / message&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;日志具体内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;M / method&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;方法名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;换行符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p / le / level&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;日志级别&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;r / relative&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出自应用程序启动以来直到创建日志记录事件所经过的毫秒数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;t / thread&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;当前线程的名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;X{key:-defaultVal} &lt;br /&gt;  mdc{key:-defaultVal}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出与生成日志记录事件的线程关联的MDC（映射的诊断上下文）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ex{depth} &lt;br /&gt;  exception{depth}  &lt;br /&gt; throwable{depth}  &lt;br /&gt; ex{depth, evaluator-1, …, evaluator-n} &lt;br /&gt;  exception{depth, evaluator-1, …, evaluator-n}  &lt;br /&gt; throwable{depth, evaluator-1, …, evaluator-n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出与日志记录事件关联的异常的堆栈信息。默认情况下，将输出完整堆栈&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xEx{depth} &lt;br /&gt;  xException{depth} &lt;br /&gt;  xThrowable{depth}  &lt;br /&gt; xEx{depth, evaluator-1, …, evaluator-n} &lt;br /&gt;  xException{depth, evaluator-1, …, evaluator-n} &lt;br /&gt;  xThrowable{depth, evaluator-1, …, evaluator-n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;与上面的％throwable相同，但添加了类包装信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nopex/nopexception&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;不输出任何信息，有效的忽略了异常&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;marker&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出与记录器请求关联的标记&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;property{key}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出名为key属性关联的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;replace(p){r, t}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;替换‘p’内容中‘r’为‘t’，正则表达式操作&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rEx{depth}  &lt;br /&gt; rootException{depth}  &lt;br /&gt; rEx{depth, evaluator-1, …, evaluator-n}  &lt;br /&gt; rootException{depth, evaluator-1, …, evaluator-n}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;输出与日志记录事件关联的异常的堆栈&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://logback.qos.ch/manual/layouts.html#formatModifiers&lt;/li&gt;
    &lt;li&gt;https://stackoverflow.com/questions/35710008/limit-message-size-in-logback&lt;/li&gt;
    &lt;li&gt;https://stackoverflow.com/questions/32704470/can-a-logback-message-field-be-truncated-trimmed-to-n-characters&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="logback" /><category term="layout" /><category term="pattern" /><summary type="html">简介 好的日志打印，对于程序的调试和查找问题是很重要的。目前广泛使用的是logback，配合lombok可以很方便 的打印日志。 @Slf4j public class LogExampleOther { public static void main(String... args) { log.error(&quot;Something else is wrong here&quot;); } } 只需要在类上加上@Slf4j注解即可</summary></entry><entry><title type="html">在Docker上安装常用的和Java相关的工具</title><link href="http://www.thxopen.com/linux/docker/2019/03/11/install-java-ee-environment-on-docker.html" rel="alternate" type="text/html" title="在Docker上安装常用的和Java相关的工具" /><published>2019-03-11T00:00:00+08:00</published><updated>2019-03-11T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/docker/2019/03/11/install-java-ee-environment-on-docker</id><content type="html" xml:base="http://www.thxopen.com/linux/docker/2019/03/11/install-java-ee-environment-on-docker.html">&lt;p&gt;之前已经写过&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;在Ubuntu上安装常用的和Java相关的工具&lt;/a&gt;,
这次要说的是如何在docker上安装这些工具。&lt;/p&gt;

&lt;p&gt;何为Docker？&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Docker是一个开放源代码软件项目，让应用程序部署在软件货柜下的工作可以自动化进行，借此在Linux操作系统上，
提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.jikexueyuan.com/project/docker-technology-and-combat/why.html&quot;&gt;为什么要使用Docker？&lt;/a&gt;已经有现成的了，我就不再多说。
之所以写这个，就是觉得Docker给我带来极大的便利，我同样希望更多人能够享受到Docker带来的好处。&lt;/p&gt;

&lt;p&gt;我一直有听说Docker，但一直没有揭开她神秘的面纱。终于我忍不住了，由于一次服务器故障，因为同事执行apt-get命令安装了新的软件，
导致系统环境变量发生了改变，导致ssh服务异常，大家都不能远程连上服务器。这个问题在服务器上一直存在，之前不知道什么原因把&lt;/p&gt;

&lt;p&gt;让我下决心要去了解Docker。&lt;/p&gt;

&lt;p&gt;/usr/local/lib/libssl.so.1.0.0
/usr/local/lib/libcrypto.so.1.0.0&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://zh.wikipedia.org/wiki/Docker&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="rabbitmq" /><category term="nginx" /><category term="redis" /><category term="jdk" /><category term="mysql" /><category term="jenkins" /><category term="gitlab" /><category term="mongodb" /><summary type="html">之前已经写过在Ubuntu上安装常用的和Java相关的工具, 这次要说的是如何在docker上安装这些工具。 何为Docker？ Docker是一个开放源代码软件项目，让应用程序部署在软件货柜下的工作可以自动化进行，借此在Linux操作系统上， 提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。 为什么要使用Docker？已经有现成的了，我就不再多说。 之所以写这个，就是觉得Docker给我带来极大的便利，我同样希望更多人能够享受到Docker带来的好处。 我一直有听说Docker，但一直没有揭开她神秘的面纱。终于我忍不住了，由于一次服务器故障，因为同事执行apt-get命令安装了新的软件， 导致系统环境变量发生了改变，导致ssh服务异常，大家都不能远程连上服务器。这个问题在服务器上一直存在，之前不知道什么原因把 让我下决心要去了解Docker。 /usr/local/lib/libssl.so.1.0.0 /usr/local/lib/libcrypto.so.1.0.0 Reference: https://zh.wikipedia.org/wiki/Docker</summary></entry><entry><title type="html">在虚拟机里安装windows10</title><link href="http://www.thxopen.com/mac/2018/11/05/install-windows10-in-virtualbox.html" rel="alternate" type="text/html" title="在虚拟机里安装windows10" /><published>2018-11-05T00:00:00+08:00</published><updated>2018-11-05T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/05/install-windows10-in-virtualbox</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/05/install-windows10-in-virtualbox.html">&lt;p&gt;见过很多人购买了mac后安装的是windows，现在看来只能说windows普及的好，用不习惯就是用不习惯，mac装windows又怎么了？
macOS的确很流畅，就像苹果手机和安卓手机那样的区别，没有细究过为什么macOS系统要比windows流畅，但是不管怎么说各有所长，你要打游戏那就选windows，
他们都只是一个工具，哪个用着上手舒服，你就选择那个。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;同时需要多个操作系统的时候怎么办呢？有些只能在windows下才能运行的程序又怎么办呢？虚拟机在这方面帮我们解决了很多问题，找到问题的解决办法就行，没有绝对的对与错，好与坏。&lt;/p&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;virtualbox&lt;/a&gt;（虚拟机软件）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/zh-cn/software-download/windows10ISO&quot;&gt;windows10 iso&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过上面的连接，下载virtualbox和windows10的安装镜像，我们就可以开始了&lt;/p&gt;

&lt;h2 id=&quot;开始安装&quot;&gt;开始安装&lt;/h2&gt;

&lt;h3 id=&quot;一配置虚拟机&quot;&gt;一，配置虚拟机&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，虚拟机名称和系统类型，这里系统类型选择【Microsoft Windows】，版本选择【windows 10（64-bit）】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step1.png&quot; alt=&quot;step 1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2，内存大小，这里可以根据软件推荐的大小配置，我这里推荐的是2G（2048 MB），为了系统更加流畅，我调到 4G （4096 MB）。可以根据电脑的配置适当上调
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step2.png&quot; alt=&quot;step 2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3，虚拟硬盘，选择【现在创建虚拟硬盘】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step3.png&quot; alt=&quot;step 3&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;3-1，虚拟硬盘文件类型，选择【VDI（VirtualBox 磁盘映像）】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step3-1.png&quot; alt=&quot;step 3-1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-2，存储在物理硬盘上，选择【动态分配】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step3-2.png&quot; alt=&quot;step 3-2&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-3，文件位置和大小，输入磁盘映像的文件名，或者保持默认，调整磁盘大小到50G
  （因为是动态分配，这里如果选择超过电脑本身物理大小也没有关系，假设我选择了1T，代表最大不能超过该设定的值，文件实际大小是没有1T的。
  所以尽量设置大一些，避免后面系统使用时间越长，占用空间也越大）
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step3-3.png&quot; alt=&quot;step 3-3&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4，配置启动光盘，选择建好的虚拟机，点击【设置】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step4.png&quot; alt=&quot;step 4&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;4-1，选择【存储】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step4-1.png&quot; alt=&quot;step 4-1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;4-2，选中光驱，在右边操作界面点击【光盘】按钮
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step4-2.png&quot; alt=&quot;step 4-2&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;4-3，添加下载好的windows10 iso文件，点击【ok】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step4-3.png&quot; alt=&quot;step 4-3&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5，选择新建的虚拟机，点击【启动】，稍等片刻，进入到安装界面
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step5.png&quot; alt=&quot;step 5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;二安装-windows-10&quot;&gt;二，安装 windows 10&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;6，进入到windows10的安装界面，点击【下一步】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step6.png&quot; alt=&quot;step 6&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;7，点击【现在安装】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step7.png&quot; alt=&quot;step 7&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;8，要求输入产品密钥，点击【我没有产品密钥】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step8.png&quot; alt=&quot;step 8&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;9，选择安装的版本，选择【windows 10 专业版】，点击【下一步】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step9.png&quot; alt=&quot;step 9&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;10，适用的声明和许可条款，勾选【我接受许可条款】，点击【下一步】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step10.png&quot; alt=&quot;step 10&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;11，选择安装类型，点击【自定义：仅安装 Windows（高级）】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step11.png&quot; alt=&quot;step 11&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;12，选择安装windows的路径，由于是新装，选择我们新建的磁盘，点击【新建】，使用默认大小，点击【应用】
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step12.png&quot; alt=&quot;step 12&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;12-1，确定创建额外分区，点击【确定】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step12-1.png&quot; alt=&quot;step 12-1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;12-2，选择【主分区】，点击【下一步】
  &lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step12-2.png&quot; alt=&quot;step 12-2&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;13，开始安装，等待自动安装完成
&lt;img src=&quot;/assets/images/post/mac/development/installwindows/windows-step13.png&quot; alt=&quot;step 13&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;14，安装完成后需要对windows10进行个性化配置，按照界面提示操作即可，到此windows10安装完成 :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="virtualbox" /><category term="windows10" /><category term="mac" /><category term="虚拟机" /><summary type="html">见过很多人购买了mac后安装的是windows，现在看来只能说windows普及的好，用不习惯就是用不习惯，mac装windows又怎么了？ macOS的确很流畅，就像苹果手机和安卓手机那样的区别，没有细究过为什么macOS系统要比windows流畅，但是不管怎么说各有所长，你要打游戏那就选windows， 他们都只是一个工具，哪个用着上手舒服，你就选择那个。</summary></entry><entry><title type="html">windows下安装Virtualbox增强插件-实现文件夹共享，共享剪贴板，文件拖拽</title><link href="http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-windows.html" rel="alternate" type="text/html" title="windows下安装Virtualbox增强插件-实现文件夹共享，共享剪贴板，文件拖拽" /><published>2018-11-05T00:00:00+08:00</published><updated>2018-11-05T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-windows</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-windows.html">&lt;p&gt;为了方便同时操作虚拟机（guest）和主机（host），剪贴板、文件拖拽和文件夹共享是必不可少的。
首先启动虚拟机，按照下面的步骤，安装virtualbox增强插件即可解决这些问题。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;一安装virtualbox增强插件&quot;&gt;一，安装virtualbox增强插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，左上角找到【Devices】- 【Insert Guest Additions CD Image…】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2，然后打开我的电脑，可以看到CD驱动器已经加载
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3，打开光盘，看到如下目录，双击【VBoxWindowsAdditions.exe】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/3.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4，所有操作都默认即可，一路点击【Next】，然后点击【Install】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/44.png&quot; alt=&quot;44&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/development/installadditions/55.png&quot; alt=&quot;55&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/development/installadditions/66.png&quot; alt=&quot;66&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;5，系统设备安装提示，点击【安装】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/33.png&quot; alt=&quot;33&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;6，安装完成，要求重启，点击【Finish】重启即可
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;二配置增强插件&quot;&gt;二，配置增强插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，左上角找到【Devices】- 【Shared Clipboard】，选择【Bidirectional】，实现剪贴板共享，现在你可以在主机上复制，在虚拟机里粘贴
（反之亦然，注意windows下是ctrl+c和ctrl+v，在mac下是commond+c和commond+v）
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2，【Devices】 - 【Drag and Drop】，选择【Bidirectional】，实现文件拖拽，现在你可以拖拽文件到虚拟机，但是反过来不行，会报错，暂且没有找到方法，如果要从虚拟机拷贝文件到主机，参考下面【文件夹共享】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/7.png&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3，【Devices】 - 【Shared Folders】 - 【Shared Folders Settings…】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;3-1,添加一个共享目录，点击右边的【➕】按钮
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/8.png&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-2，选择本地的一个目录，勾选【Auto-mount】自动挂载 和【Make Permanent】固定分配，点击【ok】
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/9.png&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-3，保存共享文件夹配置，点击【ok】&lt;br /&gt;
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/10.png&quot; alt=&quot;10&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-4，这个时候重启虚拟机，可以在网络位置看到共享的文件夹（ps：如果没有，检查windows10是否已经开启了网络发现）
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/11.png&quot; alt=&quot;11&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;ps：
如果遇到粘贴板不能正常使用，检查是否升级了virtualbox软件，如果是，那么需要将对应的增强插件也需要升级，
卸载掉已经安装的增强插件，按照以上步骤重新安装增强插件即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="virtualbox" /><category term="windows10" /><category term="文件夹共享" /><category term="共享剪贴板" /><category term="文件拖拽" /><summary type="html">为了方便同时操作虚拟机（guest）和主机（host），剪贴板、文件拖拽和文件夹共享是必不可少的。 首先启动虚拟机，按照下面的步骤，安装virtualbox增强插件即可解决这些问题。</summary></entry><entry><title type="html">ubuntu server下安装Virtualbox增强插件-实现文件夹共享</title><link href="http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-ubuntu-server.html" rel="alternate" type="text/html" title="ubuntu server下安装Virtualbox增强插件-实现文件夹共享" /><published>2018-11-05T00:00:00+08:00</published><updated>2018-11-05T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-ubuntu-server</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/05/install-virtualbox-additions-for-ubuntu-server.html">&lt;p&gt;由于ubuntu server不是一个桌面系统，那么对于剪贴板，文件拖拽这些需求就没有那么强烈，不过文件的共享倒是一个基本的问题。
为了方便虚拟机和主机之间的文件共享，虚拟机提供了virtualbox增强插件解决这个问题。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;启动ubuntu server虚拟机，按照以下步骤安装virtualbox增强插件&lt;/p&gt;

&lt;h2 id=&quot;一安装virtualbox增强插件&quot;&gt;一，安装virtualbox增强插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，左上角找到【Devices】- 【Insert Guest Additions CD Image…】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;2，执行下面命令挂载CD
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/cdrom /media/cdrom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;挂载成功，进入目录可以看到&lt;code class=&quot;highlighter-rouge&quot;&gt;VBoxLinuxAdditions.run&lt;/code&gt;安装脚本&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /media/cdrom
32Bit  AUTORUN.INF  cert  runasroot.sh  VBoxLinuxAdditions.run    VBoxWindowsAdditions-amd64.exe  VBoxWindowsAdditions-x86.exe
64Bit  autorun.sh   OS2   TRANS.TBL     VBoxSolarisAdditions.pkg  VBoxWindowsAdditions.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;3，安装VirtualBox guest additions所需要的依赖
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;build-essential linux-headers-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;4，执行&lt;code class=&quot;highlighter-rouge&quot;&gt;VBoxLinuxAdditions.run&lt;/code&gt;脚本
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /media/cdrom/VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;二配置增强插件&quot;&gt;二，配置增强插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;5，配置共享文件夹，【Devices】 - 【Shared Folders】 - 【Shared Folders Settings…】
&lt;img src=&quot;/assets/images/post/mac/development/installadditions/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;5-1,添加一个共享目录，点击右边的【➕】按钮
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/5-1.png&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;5-2，选择本地的一个目录，【Folder Name】填写&lt;code class=&quot;highlighter-rouge&quot;&gt;wwwroot&lt;/code&gt;（或者其他名称），然后勾选【Make Permanent】固定分配，点击【ok】
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/5-2.png&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;5-3，保存共享文件夹配置，点击【ok】&lt;br /&gt;
  &lt;img src=&quot;/assets/images/post/mac/development/installadditions/5-3.png&quot; alt=&quot;10&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;5，重启vm
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;shutdown &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;6，待重启完毕，创建共享文件夹的挂载点
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/wwwroot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;7，把共享文件夹挂载到上一步创建的目录
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; vboxsf &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000,gid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000 wwwroot ~/wwwroot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;blockquote&gt;
      &lt;p&gt;ps:uid和gid的值为当前用户的，这样就可以用当前登录的用户访问共享文件夹里的内容，不然挂载的文件默认用户是root，组也是root组。
通过命令&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;查看当前用户对应的信息&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;8，现在可以在vm内访问主机共享的文件夹类容
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/wwwroot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:
https://gist.github.com/estorgio/1d679f962e8209f8a9232f7593683265
https://ubuntuforums.org/showthread.php?t=1398340&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="virtualbox" /><category term="ubuntu server" /><category term="文件夹共享" /><summary type="html">由于ubuntu server不是一个桌面系统，那么对于剪贴板，文件拖拽这些需求就没有那么强烈，不过文件的共享倒是一个基本的问题。 为了方便虚拟机和主机之间的文件共享，虚拟机提供了virtualbox增强插件解决这个问题。</summary></entry><entry><title type="html">在虚拟机里安装Ubuntu Server 16</title><link href="http://www.thxopen.com/mac/2018/11/05/install-ubuntu-server-in-virtualbox.html" rel="alternate" type="text/html" title="在虚拟机里安装Ubuntu Server 16" /><published>2018-11-05T00:00:00+08:00</published><updated>2018-11-05T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/05/install-ubuntu-server-in-virtualbox</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/05/install-ubuntu-server-in-virtualbox.html">&lt;p&gt;服务器环境大部分都是linux，作为开发来说，和线上环境保持一致会比较方便，而且开发起来也会比较方便。
虽然macOS也是类unix，但终究还是有点区别，况且安装了虚拟机出了问题还可以重来。
对本身的系统保持一个好的状态，这是我们首先要做到的，想起以前学oracle的时候，在本机安装，结果没装好，连系统都要重做，那是多么痛苦的一段经历。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;virtualbox&lt;/a&gt;（虚拟机软件）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ubuntu.com/download/alternative-downloads&quot;&gt;Ubuntu Server 下载页面&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://releases.ubuntu.com/16.04/ubuntu-16.04.5-server-amd64.iso.torrent?_ga=2.238927552.1516861282.1544003123-1140686435.1544003123&quot;&gt;Ubuntu 16.04.5 Server (64-bit) 种子&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过上面的连接，下载virtualbox和ubuntu server的安装镜像，我们就可以开始了&lt;/p&gt;

&lt;h2 id=&quot;开始安装&quot;&gt;开始安装&lt;/h2&gt;

&lt;h3 id=&quot;一配置虚拟机&quot;&gt;一，配置虚拟机&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，虚拟机名称和系统类型，这里系统类型选择【Linux】，版本选择【Ubuntu（64-bit）】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/1.png&quot; alt=&quot;step 1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2，内存大小，这里可以根据软件推荐的大小配置，我这里推荐的是1G（1024 MB），为了系统更加流畅，我调到 4G （4096 MB）。可以根据电脑的配置适当上调
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/2.png&quot; alt=&quot;step 2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3，虚拟硬盘，选择【现在创建虚拟硬盘】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/3.png&quot; alt=&quot;step 3&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;3-1，虚拟硬盘文件类型，选择【VDI（VirtualBox 磁盘映像）】
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/3-1.png&quot; alt=&quot;step 3-1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-2，存储在物理硬盘上，选择【动态分配】
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/3-2.png&quot; alt=&quot;step 3-2&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3-3，文件位置和大小，输入磁盘映像的文件名，或者保持默认，调整磁盘大小到10G
  （因为是动态分配，这里如果选择超过电脑本身物理大小也没有关系，假设我选择了1T，代表最大不能超过该设定的值，文件实际大小是没有1T的。
  所以尽量设置大一些，避免后面系统使用时间越长，占用空间也越大）
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/3-3.png&quot; alt=&quot;step 3-3&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4，配置启动光盘，选择建好的虚拟机，点击【设置】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/4.png&quot; alt=&quot;step 4&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;4-1，选择【存储】
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/4-1.png&quot; alt=&quot;step 4-1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;4-2，选中光驱，在右边操作界面点击【光盘】按钮
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/4-2.png&quot; alt=&quot;step 4-2&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;4-3，添加下载好的Ubuntu Server iso文件，点击【ok】
  &lt;img src=&quot;/assets/images/post/mac/development/installubuntu/4-3.png&quot; alt=&quot;step 4-3&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5，选择新建的虚拟机，点击【启动】，稍等片刻，进入到安装界面
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/5.png&quot; alt=&quot;step 5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;二安装ubuntu-server&quot;&gt;二，安装Ubuntu Server&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1，进入安装界面，首先需要选择语言，这里选择【English】（这里不选择中文是因为安装会有问题，据说是一个bug）
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/6.png&quot; alt=&quot;step 6&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2，选择语言后，进入到ubuntu正式安装界面，选择【Install Ubuntu Server】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/7.png&quot; alt=&quot;step 7&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;3, 在正式安装之前，先看看 Ubuntu 安装程序主菜单，如果在安装过程中出现了问题，可以返回到主菜单，重试某些步骤
（实际安装过程直接进入第四步，不会有此界面）
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/8.png&quot; alt=&quot;step 8&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;选择安装语言&lt;/li&gt;
      &lt;li&gt;允许盲人使用盲人显示器访问软件&lt;/li&gt;
      &lt;li&gt;配置键盘&lt;/li&gt;
      &lt;li&gt;探测并挂在光盘&lt;/li&gt;
      &lt;li&gt;装载 debconf 预配置文件&lt;/li&gt;
      &lt;li&gt;从光盘加载安装程序组件&lt;/li&gt;
      &lt;li&gt;改变 debconf 的优先级设置&lt;/li&gt;
      &lt;li&gt;检测光盘的完整性&lt;/li&gt;
      &lt;li&gt;保存调试日志&lt;/li&gt;
      &lt;li&gt;允许 shell&lt;/li&gt;
      &lt;li&gt;终止安装&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4，选择安装语言，这里选择【English】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/9.png&quot; alt=&quot;step 9&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5，选择你的位置，这里选择【United States】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/10.png&quot; alt=&quot;step 10&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;6，配置键盘布局，是否检测键盘布局，这里选择【No】 
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/11.png&quot; alt=&quot;step 11&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;7，配置键盘布局，选择键盘类型，这里选择【English（US）】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/12.png&quot; alt=&quot;step 12&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;8，配置键盘布局，选择键盘布局，这里选择【English（US）】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/13.png&quot; alt=&quot;step 13&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;9，生效以上配置，需要等待一会儿
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/14.png&quot; alt=&quot;step 14&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;10，配置网络，设置hostname，这里输入【ubuntunode1.thxopen.com】，然后选择【Continue】(ps：目的是在其他机器上通过此hostname访问到主机，可以是任意的字符串)
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/15.png&quot; alt=&quot;step 15&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;11，设置用户和密码，输入用户的全称，这里输入【ubuntu】，然后选择【Continue】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/16.png&quot; alt=&quot;step 16&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;12，设置用户和密码，输入用户的登录账号，这里输入【ubuntu】，然后选择【Continue】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/17.png&quot; alt=&quot;step 17&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;13，设置用户和密码，输入登录账号的密码，这里输入【12345678】，然后选择【Continue】（根据实际需求设置相应强度的密码）
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/18.png&quot; alt=&quot;step 18&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;14，设置用户和密码，重复上一步输入的密码，这里输入【12345678】，然后选择【Continue】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/19.png&quot; alt=&quot;step 19&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;15，设置用户和密码，由于这里密码设置过于简单，提示是否要使用弱密码，这里选择【Yes】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/20.png&quot; alt=&quot;step 20&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;16，设置用户和密码，是否加密home目录，这里选择【No】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/21.png&quot; alt=&quot;step 21&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;17，生效以上配置，需要等一会儿
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/22.png&quot; alt=&quot;step 22&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;18，配置时钟，检测到当前时区是亚洲、重庆，这里选择【Yes】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/23.png&quot; alt=&quot;step 23&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;19，磁盘分区，分区方式，这里选择【Guided - use entire disk】使用全部磁盘
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/24.png&quot; alt=&quot;step 24&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;20，磁盘分区，选择用来分区的磁盘，这里选择【ATA VBOX HARDDISK】(前面新建虚拟机时候创建的)
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/25.png&quot; alt=&quot;step 25&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;21，磁盘分区，使用默认的分区配置，这里选择【Yes】使用默认的配置来分区磁盘
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/26.png&quot; alt=&quot;step 26&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;22，生效以上配置，需要等待一会儿
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/27.png&quot; alt=&quot;step 27&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;23，配置包管理器，是否设置代理服务器，这里留空，不填写，直接【Continue】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/28.png&quot; alt=&quot;step 28&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;24，配置自动升级，这里选择【No automatic updates】（根据自己的需要是否自动更新系统保持系统安全）
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/29.png&quot; alt=&quot;step 29&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;25，选择需要安装的软件，这里勾选【standard system utilities】和【OpenSSH server】，然后选择【Continue】(方向键切换，空格键选择或取消)
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/30.png&quot; alt=&quot;step 30&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;26，生效以上配置，需要等一会儿
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/31.png&quot; alt=&quot;step 31&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;27，安装GRUB引导装载程序在磁盘上，选择【Yes】
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/32.png&quot; alt=&quot;step 32&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;28，安装完成，选择【Continue】系统自动重启
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/33.png&quot; alt=&quot;step 33&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;29，重启后自动进入到登录界面
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/34.png&quot; alt=&quot;step 34&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;30，输入前面步骤中设置的账号【ubuntu】和密码【12345678】，登录到系统
&lt;img src=&quot;/assets/images/post/mac/development/installubuntu/35.png&quot; alt=&quot;step 35&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://www.linuxidc.com/Linux/2017-11/148341.htm&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="mac" /><category term="virtualbox" /><summary type="html">服务器环境大部分都是linux，作为开发来说，和线上环境保持一致会比较方便，而且开发起来也会比较方便。 虽然macOS也是类unix，但终究还是有点区别，况且安装了虚拟机出了问题还可以重来。 对本身的系统保持一个好的状态，这是我们首先要做到的，想起以前学oracle的时候，在本机安装，结果没装好，连系统都要重做，那是多么痛苦的一段经历。</summary></entry><entry><title type="html">如何修改macOS的触控板滚动方向，点击行为和锁定</title><link href="http://www.thxopen.com/mac/2018/11/04/hardware-touch-pad-function.html" rel="alternate" type="text/html" title="如何修改macOS的触控板滚动方向，点击行为和锁定" /><published>2018-11-04T00:00:00+08:00</published><updated>2018-11-04T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/04/hardware-touch-pad-function</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/04/hardware-touch-pad-function.html">&lt;p&gt;触摸板也是mac电脑的一个特色，也是大家喜欢mac的一个重要原因之一。如果操作得好可以完全不需要鼠标，简直就是神器&lt;/p&gt;

&lt;p&gt;不过刚从windows切换过来有些操作还是不太习惯，主要是以下几个操作：&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;触摸板控制滚轮&quot;&gt;触摸板控制滚轮&lt;/h2&gt;

&lt;p&gt;在windows下虽然鼠标的滚轮是随着滚动条的方向，但是在触摸板上却是跟着屏幕内容滚动（联想yoga 910 就是这样），用了mac后才发现这个叫自然滚动，
如果发现滚动方向别扭通过下面的设置更改回来。&lt;/p&gt;

&lt;p&gt;在mac下进入到【系统偏好设置】 - 【触控板】 - 【滚动缩放】 - 【滚动方向：自然】，勾选上&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/1.png&quot; alt=&quot;系统偏好设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/2.png&quot; alt=&quot;触控板&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;轻触点击&quot;&gt;轻触点击&lt;/h2&gt;

&lt;p&gt;习惯了windows的触控板后，轻触就是鼠标左键点击，但mac默认不是这样的，必须要按下触控板才能点击，让我感觉到很不习惯。通过下面的设置可以达到我的要求&lt;/p&gt;

&lt;p&gt;同样还是在【系统偏好设置】 - 【触控板】- 【光标与点按】 - 【轻点来点按】，勾选上&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/3.png&quot; alt=&quot;触控板&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;连续轻触两下锁定&quot;&gt;连续轻触两下锁定&lt;/h2&gt;

&lt;p&gt;在windows下还有一个操作已经习惯了，前面是轻触一下代表点按，这下要说的是鼠标点住左键不放（轻触两下触控板完成），mac下默认不是这样，
想要拖动窗口，或者选中文字需要按照下面的设置才能解决&lt;/p&gt;

&lt;p&gt;【系统偏好设置】 - 【辅助功能】- 【鼠标与触控板】 - 【触控板选项】 - 【启动拖拽】，勾选上，并且选择【三指拖移】
 &lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/4.png&quot; alt=&quot;触控板&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/5.png&quot; alt=&quot;触控板&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/touch-pad-function/6.png&quot; alt=&quot;触控板&quot; /&gt;&lt;/p&gt;

&lt;p&gt;mac里没有完全等价的操作，只能说【三指拖移】暂且解决了我的问题，【使用拖移锁定】或者 【不是用拖移锁定】可以自己尝试，我觉得达不到我要的效果。
选择【三指拖移】后，切换桌面的操作就变成四指了，这个要取舍一下&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://sspai.com/post/44173&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="mac" /><category term="touchpad" /><summary type="html">触摸板也是mac电脑的一个特色，也是大家喜欢mac的一个重要原因之一。如果操作得好可以完全不需要鼠标，简直就是神器 不过刚从windows切换过来有些操作还是不太习惯，主要是以下几个操作：</summary></entry><entry><title type="html">如何修改macOS的鼠标滚轮方向</title><link href="http://www.thxopen.com/mac/2018/11/03/hardware-how-to-change-wheel-direction-in-mac.html" rel="alternate" type="text/html" title="如何修改macOS的鼠标滚轮方向" /><published>2018-11-03T00:00:00+08:00</published><updated>2018-11-03T00:00:00+08:00</updated><id>http://www.thxopen.com/mac/2018/11/03/hardware-how-to-change-wheel-direction-in-mac</id><content type="html" xml:base="http://www.thxopen.com/mac/2018/11/03/hardware-how-to-change-wheel-direction-in-mac.html">&lt;p&gt;说到鼠标滚轮，这应该是每个从windows转向mac后要遇到的问题，因为两个操作是反的，如果习惯了windows的操作方式，使用mac的时候会很不习惯。&lt;/p&gt;

&lt;p&gt;如何修改滚轮的方向和windows保持一致呢？&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;【系统偏好设置】 - 【鼠标】 - 【滚动方向：自然】，取消勾选即可&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/mac-wheel-config/1.png&quot; alt=&quot;系统偏好设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/mac-wheel-config/2.png&quot; alt=&quot;鼠标&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/mac/hardware/mac-wheel-config/3.png&quot; alt=&quot;滚动方向&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;苹果的逻辑是：
你滚动鼠标滚轮是在控制屏幕和触摸板的逻辑是一致的，想把屏幕下面的内容拉出来，自然就该向上拉屏幕，
也就要向上滚动鼠标滚轮——相当于直接把窗帘撩起来。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;微软的逻辑是：
你滚动鼠标滚轮是在控制屏幕上的滚动条滚动条当然是向下拉才
能把内容拉上去——相当于是通过拉窗户旁边的线卷起窗帘。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/mac/2018/11/01/windows-to-mac-skills.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://www.zhihu.com/question/22096248/answer/22485346&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="mac" /><category term="wheel" /><category term="direction" /><summary type="html">说到鼠标滚轮，这应该是每个从windows转向mac后要遇到的问题，因为两个操作是反的，如果习惯了windows的操作方式，使用mac的时候会很不习惯。 如何修改滚轮的方向和windows保持一致呢？</summary></entry></feed>