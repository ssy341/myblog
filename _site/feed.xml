<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.2">Jekyll</generator><link href="http://www.thxopen.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.thxopen.com/" rel="alternate" type="text/html" /><updated>2018-09-19T16:35:30+08:00</updated><id>http://www.thxopen.com/</id><title type="html">单客欧朋</title><subtitle>好记性不如烂笔头</subtitle><author><name>单思义</name><email>keith@thxopen.com</email></author><entry><title type="html">Unknown column ‘NaN’ in ‘field list’</title><link href="http://www.thxopen.com/database/2018/09/19/unknown-column-nan-in-field-list.html" rel="alternate" type="text/html" title="Unknown column 'NaN' in 'field list'" /><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><id>http://www.thxopen.com/database/2018/09/19/unknown-column-nan-in-field-list</id><content type="html" xml:base="http://www.thxopen.com/database/2018/09/19/unknown-column-nan-in-field-list.html">&lt;h3 id=&quot;起因&quot;&gt;起因&lt;/h3&gt;

&lt;p&gt;使用mysql数据库，在插入数据时，抛出以下异常&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Unknown column &lt;span class=&quot;s1&quot;&gt;'NaN'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'field list'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;字面上意思：未知的列’NaN’在字段列表中&lt;/p&gt;

&lt;p&gt;我首先想到的是自己 insert 语句是不是有问题，但想到插入语句是由框架完成的，列因该不会弄错，那是什么原因呢？&lt;/p&gt;

&lt;p&gt;再看关键字&lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt;，这个是&lt;code class=&quot;highlighter-rouge&quot;&gt;Not a Number&lt;/code&gt;的意思，我联想到我的插入数据包含浮点类型的数据，调试代码发现有除数为0的情况&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//misV+rigVf 可能为 0&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recallRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rigVf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rigVf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;perCategory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setReCallRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recallRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当被除数为0，&lt;code class=&quot;highlighter-rouge&quot;&gt;recallRate&lt;/code&gt;的结果就是&lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt;，导致mysql插入数据的时候，本来因该是一个浮点类型，结果插入了&lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt;，mysql报错。&lt;/p&gt;

&lt;p&gt;找到原因了问题就好解决，在设置&lt;code class=&quot;highlighter-rouge&quot;&gt;recallRate&lt;/code&gt;值的时候判断一下&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recallRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;perCategory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setReCallRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recallRate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;加上判断之后，问题解决&lt;/p&gt;

&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;编码需要规范，不然就会出现这些低级错误&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://www.cnblogs.com/big-xuyue/p/4106130.html&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="mysql" /><category term="database" /><category term="error" /><category term="exception" /><summary type="html">起因 使用mysql数据库，在插入数据时，抛出以下异常 Unknown column 'NaN' in 'field list' 字面上意思：未知的列’NaN’在字段列表中 我首先想到的是自己 insert 语句是不是有问题，但想到插入语句是由框架完成的，列因该不会弄错，那是什么原因呢？ 再看关键字NaN，这个是Not a Number的意思，我联想到我的插入数据包含浮点类型的数据，调试代码发现有除数为0的情况 //misV+rigVf 可能为 0 float recallRate = rigVf / (misV + rigVf); perCategory.setReCallRate(recallRate); 当被除数为0，recallRate的结果就是NaN，导致mysql插入数据的时候，本来因该是一个浮点类型，结果插入了NaN，mysql报错。 找到原因了问题就好解决，在设置recallRate值的时候判断一下 if(!Float.isNaN(recallRate)){ perCategory.setReCallRate(recallRate); } 加上判断之后，问题解决 总结 编码需要规范，不然就会出现这些低级错误 Reference: https://www.cnblogs.com/big-xuyue/p/4106130.html</summary></entry><entry><title type="html">在ubuntu下使用mysqlbinlog恢复drop后的数据</title><link href="http://www.thxopen.com/database/2018/08/28/mysqlbinlog-recovery-data.html" rel="alternate" type="text/html" title="在ubuntu下使用mysqlbinlog恢复drop后的数据" /><published>2018-08-28T00:00:00+08:00</published><updated>2018-08-28T00:00:00+08:00</updated><id>http://www.thxopen.com/database/2018/08/28/mysqlbinlog-recovery-data</id><content type="html" xml:base="http://www.thxopen.com/database/2018/08/28/mysqlbinlog-recovery-data.html">&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;我肯定跟mysql过不去，覆盖数据在我身上已经发生了2次了，难道我这是上演从删库到跑路么？&lt;/p&gt;

&lt;p&gt;在上次覆盖了数据之后，我就告诉自己操作数据库先备份，即便错了也可以恢复，这次操作之前我已经很谨慎了，可惜最后还是做错了。&lt;/p&gt;

&lt;p&gt;同事辛苦几周操作的数据被我一秒钟给覆盖了，我没有着急，我淡定，我回想上次误操作后，打开了mysql的日志功能，据说可以一定程度的恢复数据，
这次我来验证一下，通过我几个小时的挣扎，数据恢复过来，但从结果来看，并不是100%的恢复了，没办法，只能再花时间精力把数据重新来过。&lt;/p&gt;

&lt;p&gt;只可惜什么都有就是没有后悔药，写下此篇，引以为戒，&lt;strong&gt;数据一定一定一定要备份！！！操作一定一定一定要谨慎！！！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;虽然没有100%的恢复，但是如果没有开启&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;那一定就恢复不了了，至少还有个救命稻草，下文介绍如何使用&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlbinlog&lt;/code&gt;命令恢复drop后的数据&lt;/p&gt;

&lt;h2 id=&quot;查看mysql日志是否开启&quot;&gt;查看mysql日志是否开启&lt;/h2&gt;

&lt;p&gt;进入mysql的配置目录，一般在&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/mysql/mysql.conf.d&lt;/code&gt;目录里面，有如下两个文件&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:/etc/mysql/mysql.conf.d&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;mysqld.cnf  mysqld_safe_syslog.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqld.cnf&lt;/code&gt;文件，找到&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;配置&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# The following can be used as easy to replay backup logs or for replication.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# note: if you are setting up a replication slave, see README.Debian about&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#       other settings you may need to change.&lt;/span&gt;
server-id               &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
log_bin                 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/log/mysql/mysql-bin.log
expire_logs_days        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 10
max_binlog_size   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 500M
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认情况下&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;功能是关闭的，把 &lt;code class=&quot;highlighter-rouge&quot;&gt;server-id&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt; 取消注释，保存退出，重启mysql即可。&lt;/p&gt;

&lt;h2 id=&quot;查找-mysql-日志文件&quot;&gt;查找 mysql 日志文件&lt;/h2&gt;

&lt;p&gt;根据&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;配置的日志目录，我找到了日志&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:/etc/mysql/mysql.conf.d&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/log/mysql/
thxopen@Thxopen:/var/log/mysql&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;error.log  mysql-bin.000001  mysql-bin.000002  mysql-bin.000003  mysql-bin.000004  mysql-bin.index
thxopen@Thxopen:/var/log/mysql&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll
总用量 364160
drwxr-x--- 1 mysql adm          512 8月  29 10:06 ./
drwxrwxr-x 1 root  syslog       512 11月 18  2017 ../
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql adm    108427282 8月  29 10:13 error.log
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        154 8月  28 19:37 mysql-bin.000001
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        177 8月  28 19:55 mysql-bin.000002
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql  264390804 8月  29 10:06 mysql-bin.000003
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        154 8月  29 10:06 mysql-bin.000004
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        128 8月  29 10:06 mysql-bin.index

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql-bin.000001&lt;/code&gt; 即为我们需要的日志文件，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlbinlog&lt;/code&gt;命令可以导出可执行的sql文件&lt;/p&gt;

&lt;h2 id=&quot;mysqlbinlog-介绍&quot;&gt;mysqlbinlog 介绍&lt;/h2&gt;

&lt;p&gt;像一般的系统一样，我们会对系统的每一个操作记录下操作日志，而&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;就是对数据库的每一个操作记录下的一个二进制的日志，里面包含了我们
所有执行的sql语句。&lt;/p&gt;

&lt;p&gt;通过此命令，我们可以导出我们操作的sql语句，这样达到恢复数据的目的。
关于&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlbinlog&lt;/code&gt;命令几个常使用的参数，可以帮助我们更快的找到我们的数据&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--start-position&lt;/code&gt; 起始位置（不包含）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--stop-position&lt;/code&gt; 截止位置&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--start-datetime&lt;/code&gt; 起始时间&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--stop-datetime&lt;/code&gt; 截止时间&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--base64-output=decode-rows&lt;/code&gt; 输出的文件base64解码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多关于&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlbinlog&lt;/code&gt;的参数可以通过参数&lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt;获取&lt;/p&gt;

&lt;h2 id=&quot;模拟实际的操作新增数据修改数据删除表恢复数据&quot;&gt;模拟实际的操作，新增数据，修改数据，删除表，恢复数据&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1，创建一张测试表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;column1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; create table tb_recovery_test
    -&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    -&amp;gt;   &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;int not null ,
    -&amp;gt;   column1 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null,
    -&amp;gt;   column2 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null
    -&amp;gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 0 rows affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.05 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;2，插入测试数据&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'数据操作需谨慎'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'定期备份数据'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'后悔了'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'可是没有后悔药'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; insert into tb_recovery_test &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;,column1,column2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    -&amp;gt;       values &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,&lt;span class=&quot;s1&quot;&gt;'数据操作需谨慎'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'定期备份数据'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt; insert into tb_recovery_test &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;,column1,column2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    -&amp;gt;       values &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2,&lt;span class=&quot;s1&quot;&gt;'后悔了'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'可是没有后悔药'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from tb_recovery_test&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+----+--------------+-------------------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; | column1      | column2           |
+----+--------------+-------------------+
|  1 | 数据操作需谨慎 | 定期备份数据        |
|  2 | 后悔了        | 可是没有后悔药      |
+----+--------------+-------------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;3，修改数据，这里模拟一下真实的场景，对数据进行修改，删除，添加字段操作&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'数据操作需谨慎,定期备份数据,什么都有就是没有后悔药'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'修改了新增字段的值'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'修改了column2字段的值'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; update tb_recovery_test &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;column1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'数据操作需谨慎,定期备份数据,什么都有就是没有后悔药'&lt;/span&gt;,
    -&amp;gt;         column2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; null
    -&amp;gt;         where &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; delete from tb_recovery_test where &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt; ALTER TABLE tb_recovery_test ADD column3 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NULL&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 0 rows affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.10 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Records: 0  Duplicates: 0  Warnings: 0

mysql&amp;gt; insert into tb_recovery_test &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;,column1,column2,column3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    -&amp;gt;       values &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3,&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'新增了一个字段'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt; update tb_recovery_test &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;column3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'修改了新增字段的值'&lt;/span&gt; where &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 3&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; update tb_recovery_test &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;column2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'修改了column2字段的值'&lt;/span&gt; where &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 1 row affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.01 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from tb_recovery_test&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+----+-------------------------------------------------+-------------------------+-----------------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; | column1                                         | column2                 | column3         |
+----+-------------------------------------------------+-------------------------+-----------------+
|  2 | 数据操作需谨慎,定期备份数据,什么都有就是没有后悔药       | 修改了column2字段的值     | NULL            |
|  3 | 新增了一个字段                                     | 新增了一个字段            | 修改了新增字段的值 |
+----+--------------------------------------------------+------------------------+-----------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;4，最后我误操作，把表&lt;code class=&quot;highlighter-rouge&quot;&gt;tb_recovery_test&lt;/code&gt;删除&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tb_recovery_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; drop table tb_recovery_test&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Query OK, 0 rows affected &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.03 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;显然，最后一步操作之后，我们之前所做的操作白费了，还好我们开启了&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;功能，通过日志来找回误操作删除的数据&lt;/p&gt;

&lt;h2 id=&quot;通过日志文件恢复-tb_recovery_test-数据&quot;&gt;通过日志文件恢复 tb_recovery_test 数据&lt;/h2&gt;

&lt;p&gt;进入到mysql保存日志的目录，通过前面配置可以知道日志文件保存在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/mysql/&lt;/code&gt; 下&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:/var/log/mysql&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/log/mysql/
thxopen@Thxopen:/var/log/mysql&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;error.log  mysql-bin.000001  mysql-bin.000002  mysql-bin.000003  mysql-bin.000004  mysql-bin.index
thxopen@Thxopen:/var/log/mysql&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ll
总用量 364164
drwxr-x--- 1 mysql adm          512 8月  29 10:06 ./
drwxrwxr-x 1 root  syslog       512 11月 18  2017 ../
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql adm    108427282 8月  29 10:13 error.log
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        154 8月  28 19:37 mysql-bin.000001
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        177 8月  28 19:55 mysql-bin.000002
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql  264390804 8月  29 10:06 mysql-bin.000003
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql       3411 8月  29 13:14 mysql-bin.000004
&lt;span class=&quot;nt&quot;&gt;-rw-r-----&lt;/span&gt; 1 mysql mysql        128 8月  29 10:06 mysql-bin.index
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从列出的文件可以看出 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql-bin.000004&lt;/code&gt; 文件是最近改动的，一般来说文件的后缀是增长的，根据实际情况，这里我选择最后一个日志文件进行恢复操作&lt;/p&gt;

&lt;p&gt;执行导出日志操作，先看看导出的sql具体是什么样的&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--base64-output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;decode-rows /var/log/mysql/mysql-bin.000004 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./recovery-decode.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ps: 添加&lt;code class=&quot;highlighter-rouge&quot;&gt;--base64-output=decode-rows&lt;/code&gt; 参数导出的sql文件里不包含数据部分（即insert，delete，update），主要是方便分析，实际导出的
sql是&lt;strong&gt;不能&lt;/strong&gt;加这个参数的&lt;/p&gt;

&lt;p&gt;查看导出sql，我截取了文件的开头和结尾部分，中间部分省略&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50530 SET @@SESSION.PSEUDO_SLAVE_MODE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50003 SET @OLD_COMPLETION_TYPE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;@@COMPLETION_TYPE,COMPLETION_TYPE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
DELIMITER /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 4&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 10:06:42 server id 1  end_log_pos 123 CRC32 0xa3922cf1 	Start: binlog v 4, server v 5.7.22-0ubuntu0.16.04.1-log created 180829 10:06:42 at startup&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Warning: this binlog is either in use or was not closed properly.&lt;/span&gt;
ROLLBACK/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 123&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 10:06:43 server id 1  end_log_pos 154 CRC32 0xa18892ca 	Previous-GTIDs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# [empty]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 154&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:07:48 server id 1  end_log_pos 219 CRC32 0x7e4bd4d6 	Anonymous_GTID	last_committed=0	sequence_number=1	rbr_only=no&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANONYMOUS'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 219&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:07:48 server id 1  end_log_pos 425 CRC32 0x331aefcb 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;thxopen&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519268/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.pseudo_thread_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.foreign_key_checks&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.sql_auto_is_null&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, @@session.unique_checks&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.autocommit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.sql_mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1436549152/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.auto_increment_increment&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.auto_increment_offset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt; utf8 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;//&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.character_set_client&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33,@@session.collation_connection&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33,@@session.collation_server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.lc_time_names&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.collation_database&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DEFAULT/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
create table tb_recovery_test
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;int not null ,
  column1 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null,
  column2 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 425&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#省略了中间的内容&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了中间的内容&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了中间的内容&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了中间的内容&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# at 1970&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2035 CRC32 0x8c8ac254 	Anonymous_GTID	last_committed=6	sequence_number=7	rbr_only=yes&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;//&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANONYMOUS'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2035&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2110 CRC32 0x1d22149c 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519410/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
BEGIN
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2110&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2181 CRC32 0xcccc7fab 	Table_map: `thxopen`.`tb_recovery_test` mapped to number 168&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2181&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2287 CRC32 0x322b3ff6 	Write_rows: table id 168 flags: STMT_END_F&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2287&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2318 CRC32 0xaa8d7acf 	Xid = 3075&lt;/span&gt;
COMMIT/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2318&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2383 CRC32 0x05b7bd59 	Anonymous_GTID	last_committed=7	sequence_number=8	rbr_only=yes&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;//&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANONYMOUS'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2383&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2458 CRC32 0x171d4eab 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519410/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
BEGIN
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2458&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2529 CRC32 0xe95d3272 	Table_map: `thxopen`.`tb_recovery_test` mapped to number 168&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2529&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2713 CRC32 0x4386d86f 	Update_rows: table id 168 flags: STMT_END_F&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2713&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:10 server id 1  end_log_pos 2744 CRC32 0xcde5fff8 	Xid = 3076&lt;/span&gt;
COMMIT/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2744&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:19 server id 1  end_log_pos 2809 CRC32 0x3b9cc08b 	Anonymous_GTID	last_committed=8	sequence_number=9	rbr_only=yes&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;//&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANONYMOUS'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2809&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:19 server id 1  end_log_pos 2884 CRC32 0xb86bbce3 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519419/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
BEGIN
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2884&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:19 server id 1  end_log_pos 2955 CRC32 0x7b3dc472 	Table_map: `thxopen`.`tb_recovery_test` mapped to number 168&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 2955&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:19 server id 1  end_log_pos 3180 CRC32 0x1ff6807f 	Update_rows: table id 168 flags: STMT_END_F&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 3180&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:10:19 server id 1  end_log_pos 3211 CRC32 0xda138c1f 	Xid = 3077&lt;/span&gt;
COMMIT/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 3211&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:14:00 server id 1  end_log_pos 3276 CRC32 0x9e823905 	Anonymous_GTID	last_committed=9	sequence_number=10	rbr_only=no&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANONYMOUS'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 3276&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:14:00 server id 1  end_log_pos 3411 CRC32 0x2f9c474a 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519640/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
DROP TABLE &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;tb_recovery_test&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; generated by server &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@SESSION.GTID_NEXT&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'AUTOMATIC'&lt;/span&gt; /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; added by mysqlbinlog &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/ /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
DELIMITER &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# End of log file&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50003 SET &lt;span class=&quot;nv&quot;&gt;COMPLETION_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;@OLD_COMPLETION_TYPE&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50530 SET @@SESSION.PSEUDO_SLAVE_MODE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从文件里可以看出我一开始的建表语句，也就是我每一步操作都记录在这个日志里，那么我只要把我之前的每一步都再执行一边，数据就能恢复回来，我们按照这个思路操作&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1，先确定起始position，这里我选择 &lt;code class=&quot;highlighter-rouge&quot;&gt;end_log_pos 219&lt;/code&gt; ，前面参数解释了，起始点是不包含的所以要选建表语句之前的操作点（也可以选择起始时间 &lt;code class=&quot;highlighter-rouge&quot;&gt;180829 13:07:48&lt;/code&gt;）&lt;/li&gt;
  &lt;li&gt;2，确定截止position &lt;code class=&quot;highlighter-rouge&quot;&gt;end_log_pos 3276&lt;/code&gt; 或截止时间 &lt;code class=&quot;highlighter-rouge&quot;&gt;180829 13:14:00&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;3，导出恢复数据sql&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#使用position导出sql&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--start-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;219 &lt;span class=&quot;nt&quot;&gt;--stop-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3276 /var/log/mysql/mysql-bin.000004 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./recovery-restore.sql
&lt;span class=&quot;c&quot;&gt;#使用时间导出sql&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--start-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2018-08-29 13:07:48'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--stop-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2018-08-29 13:14:00'&lt;/span&gt; /var/log/mysql/mysql-bin.000004 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./recovery-restore.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面为导出的sql前半部分，可以看到&lt;code class=&quot;highlighter-rouge&quot;&gt;BINLOG&lt;/code&gt;后面有base64的字符，这个就是对数据的操作&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50530 SET @@SESSION.PSEUDO_SLAVE_MODE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;50003 SET @OLD_COMPLETION_TYPE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;@@COMPLETION_TYPE,COMPLETION_TYPE&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
DELIMITER /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 4&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 10:06:42 server id 1  end_log_pos 123 CRC32 0xa3922cf1 	Start: binlog v 4, server v 5.7.22-0ubuntu0.16.04.1-log created 180829 10:06:42 at startup&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Warning: this binlog is either in use or was not closed properly.&lt;/span&gt;
ROLLBACK/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
BINLOG &lt;span class=&quot;s1&quot;&gt;'
sv+FWw8BAAAAdwAAAHsAAAABAAQANS43LjIyLTB1YnVudHUwLjE2LjA0LjEtbG9nAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAACy/4VbEzgNAAgAEgAEBAQEEgAAXwAEGggAAAAICAgCAAAACgoKKioAEjQA
AfEskqM=
'&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 219&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#180829 13:07:48 server id 1  end_log_pos 425 CRC32 0x331aefcb 	Query	thread_id=15	exec_time=0	error_code=0&lt;/span&gt;
use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;thxopen&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET &lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1535519268/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.pseudo_thread_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.foreign_key_checks&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.sql_auto_is_null&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, @@session.unique_checks&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.autocommit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.sql_mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1436549152/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.auto_increment_increment&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, @@session.auto_increment_offset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt; utf8 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;//&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.character_set_client&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33,@@session.collation_connection&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33,@@session.collation_server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.lc_time_names&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
SET @@session.collation_database&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DEFAULT/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
create table tb_recovery_test
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;int not null ,
  column1 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null,
  column2 varchar&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          null
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# at 425&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#省略了后面的&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了后面的&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了后面的&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#省略了后面的&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;4，导入sql到数据库&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; database_name &amp;lt; recovery-restore.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ps：还可以加入[-f] 参数，强制执行，即忽略所有错误，根据实际情况使用这个参数&lt;/p&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; thxopen &amp;lt; recovery-restore.sql
Enter password:
thxopen@Thxopen:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
Enter password:
Welcome to the MySQL monitor.  Commands end with &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Your MySQL connection &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;is 17
Server version: 5.7.22-0ubuntu0.16.04.1-log &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;span class=&quot;s1&quot;&gt;'help;'&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;'\h'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help. Type &lt;span class=&quot;s1&quot;&gt;'\c'&lt;/span&gt; to clear the current input statement.

mysql&amp;gt; use thxopen&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Reading table information &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;completion of table and column names
You can turn off this feature to get a quicker startup with &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;

Database changed
mysql&amp;gt; show tables&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+-------------------+
| Tables_in_thxopen |
+-------------------+
| tb_recovery_test  |
+-------------------+
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from tb_recovery_test&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+----+----------------------------------------------+------------------------+------------------+
| &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; | column1                                      | column2                | column3          |
+----+----------------------------------------------+------------------------+------------------+
|  2 | 数据操作需谨慎,定期备份数据,什么都有就是没有后悔药    | 修改了column2字段的值    | NULL             |
|  3 | 新增了一个字段                                  | 新增了一个字段           | 修改了新增字段的值  |
+----+----------------------------------------------+------------------------+------------------+
2 rows &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;导入之后，重新登录到mysql，查看表，查看数据，已经恢复到drop之前的状态了，到此大功告成，数据恢复成功！&lt;/p&gt;

&lt;h2 id=&quot;导入恢复数据到数据库可能会遇到的错误&quot;&gt;导入恢复数据到数据库可能会遇到的错误&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Duplicate entry 重复的实体，出现此错误代表恢复的sql脚本里，包含创建了实体的语句，重新执行一边，则报错&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Duplicate column name 重复的列名称，理由同上&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Duplicate key name 重复的键索引，理由同上&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can’t find record in ‘table_name’ 由于业务逻辑，有些数据删除，修改，新增，删除，修改反复这样操作，导致恢复的时候出现此错误&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cannot add or update a child row: a foreign key constraint fails (&lt;code class=&quot;highlighter-rouge&quot;&gt;thxopen&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;tb_recovery_test&lt;/code&gt;, CONSTRAINT &lt;code class=&quot;highlighter-rouge&quot;&gt;FKan5m1ygnxb4ibmq1ncqklji26&lt;/code&gt; FOREIGN KEY (&lt;code class=&quot;highlighter-rouge&quot;&gt;rid&lt;/code&gt;) REFERENCES &lt;code class=&quot;highlighter-rouge&quot;&gt;tb_recovery_relate&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;))
由于外键关联，修改表的数据在另一个表中不存在导致&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Table ‘table_name’ already exists 重复的表，恢复sql脚本了包含数据库里已经存在的表&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can’t write; duplicate key in table 创建表的外键名称重复了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MySQL server has gone away 由于导入的恢复sql太大，超过了mysql的限制，需要修改配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/mysql/mysql.conf.d/mysqld.cnf&lt;/code&gt; 里 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_allowed_packet = 16M&lt;/code&gt; 配置，根据实际情况调大一些&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;对于文中的例子，恢复数据是100%的，但是在实际的项目中，虽然开启了&lt;code class=&quot;highlighter-rouge&quot;&gt;log_bin&lt;/code&gt;，
但不能想着万事大吉就不管了，我就是惨痛的经历，数据感觉50%都没恢复到。简直是血的教训，血的教训，血的教训啊~&lt;/p&gt;

&lt;p&gt;不过从这个也可以看出系统设计本身的问题，逻辑复杂，耦合度高，关联性太强，比如我误删的数据，
由于表之间的关系比较复杂，恢复出来的数据有很多问题。&lt;/p&gt;

&lt;p&gt;主要是如下几个问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;手动在Intellij Database Console执行的update语句，在恢复之后没有体现出来，字段是null&lt;/li&gt;
  &lt;li&gt;部分表的数据完全没有，一条数据也没有&lt;/li&gt;
  &lt;li&gt;由于我是覆盖数据，都是先drop表，然后又create了表，而日志文件又没有从最开始创建表的，
所以执行恢复sql的时候，报了如上列出的所有error，对于重复表，重复字段这些，我把日志里的删除，可以解决，
但是对于数据的关联出错，找不到记录的就太多了，没有办法一一修复，为了执行完成sql，导入的时候加了[-f]参数，忽略所有错误&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为上面这些问题，加上日志本身也不全，导致数据根本没法100%的恢复&lt;/p&gt;

&lt;p&gt;说了这么多，还是一句话，&lt;strong&gt;没有规矩，不成方圆&lt;/strong&gt;，做事要小心谨慎，按照一定的流程做事就可以减少犯错误的几率。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;定期备份数据，操作数据谨慎&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/cenalulu/archive/2013/01/08/2850820.html&quot;&gt;https://www.cnblogs.com/cenalulu/archive/2013/01/08/2850820.html&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/leshami/article/details/41962243&quot;&gt;https://blog.csdn.net/leshami/article/details/41962243&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.unixfbi.com/499.html&quot;&gt;http://www.unixfbi.com/499.html&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://blog.51cto.com/suifu/1845457&quot;&gt;http://blog.51cto.com/suifu/1845457&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/leezhxing/p/3347610.html&quot;&gt;https://www.cnblogs.com/leezhxing/p/3347610.html&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.hankcs.com/appos/database/mysql-restore-dropped-table.html&quot;&gt;http://www.hankcs.com/appos/database/mysql-restore-dropped-table.html&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_41004350/article/details/78547005&quot;&gt;https://blog.csdn.net/weixin_41004350/article/details/78547005&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/xyz846/article/details/52210542&quot;&gt;https://blog.csdn.net/xyz846/article/details/52210542&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="mysql" /><category term="mysqlbinlog" /><category term="drop" /><category term="ubuntu" /><summary type="html">背景 我肯定跟mysql过不去，覆盖数据在我身上已经发生了2次了，难道我这是上演从删库到跑路么？ 在上次覆盖了数据之后，我就告诉自己操作数据库先备份，即便错了也可以恢复，这次操作之前我已经很谨慎了，可惜最后还是做错了。 同事辛苦几周操作的数据被我一秒钟给覆盖了，我没有着急，我淡定，我回想上次误操作后，打开了mysql的日志功能，据说可以一定程度的恢复数据， 这次我来验证一下，通过我几个小时的挣扎，数据恢复过来，但从结果来看，并不是100%的恢复了，没办法，只能再花时间精力把数据重新来过。 只可惜什么都有就是没有后悔药，写下此篇，引以为戒，数据一定一定一定要备份！！！操作一定一定一定要谨慎！！！ 虽然没有100%的恢复，但是如果没有开启log_bin那一定就恢复不了了，至少还有个救命稻草，下文介绍如何使用mysqlbinlog命令恢复drop后的数据 查看mysql日志是否开启 进入mysql的配置目录，一般在/etc/mysql/mysql.conf.d目录里面，有如下两个文件 thxopen@Thxopen:/etc/mysql/mysql.conf.d$ ls mysqld.cnf mysqld_safe_syslog.cnf 编辑mysqld.cnf文件，找到log_bin配置 # The following can be used as easy to replay backup logs or for replication. # note: if you are setting up a replication slave, see README.Debian about # other settings you may need to change. server-id = 1 log_bin = /var/log/mysql/mysql-bin.log expire_logs_days = 10 max_binlog_size = 500M 默认情况下log_bin功能是关闭的，把 server-id 和 log_bin 取消注释，保存退出，重启mysql即可。 查找 mysql 日志文件 根据log_bin配置的日志目录，我找到了日志 thxopen@Thxopen:/etc/mysql/mysql.conf.d$ cd /var/log/mysql/ thxopen@Thxopen:/var/log/mysql$ ls error.log mysql-bin.000001 mysql-bin.000002 mysql-bin.000003 mysql-bin.000004 mysql-bin.index thxopen@Thxopen:/var/log/mysql$ ll 总用量 364160 drwxr-x--- 1 mysql adm 512 8月 29 10:06 ./ drwxrwxr-x 1 root syslog 512 11月 18 2017 ../ -rw-r----- 1 mysql adm 108427282 8月 29 10:13 error.log -rw-r----- 1 mysql mysql 154 8月 28 19:37 mysql-bin.000001 -rw-r----- 1 mysql mysql 177 8月 28 19:55 mysql-bin.000002 -rw-r----- 1 mysql mysql 264390804 8月 29 10:06 mysql-bin.000003 -rw-r----- 1 mysql mysql 154 8月 29 10:06 mysql-bin.000004 -rw-r----- 1 mysql mysql 128 8月 29 10:06 mysql-bin.index mysql-bin.000001 即为我们需要的日志文件，使用mysqlbinlog命令可以导出可执行的sql文件 mysqlbinlog 介绍 像一般的系统一样，我们会对系统的每一个操作记录下操作日志，而log_bin就是对数据库的每一个操作记录下的一个二进制的日志，里面包含了我们 所有执行的sql语句。 通过此命令，我们可以导出我们操作的sql语句，这样达到恢复数据的目的。 关于mysqlbinlog命令几个常使用的参数，可以帮助我们更快的找到我们的数据 --start-position 起始位置（不包含） --stop-position 截止位置 --start-datetime 起始时间 --stop-datetime 截止时间 --base64-output=decode-rows 输出的文件base64解码 更多关于mysqlbinlog的参数可以通过参数--help获取 模拟实际的操作，新增数据，修改数据，删除表，恢复数据 1，创建一张测试表 create table tb_recovery_test ( id int not null , column1 varchar(32) null, column2 varchar(32) null ); 运行结果： mysql&amp;gt; create table tb_recovery_test -&amp;gt; ( -&amp;gt; id int not null , -&amp;gt; column1 varchar(32) null, -&amp;gt; column2 varchar(32) null -&amp;gt; ); Query OK, 0 rows affected (0.05 sec) 2，插入测试数据 insert into tb_recovery_test (id,column1,column2) values (1,'数据操作需谨慎','定期备份数据'); insert into tb_recovery_test (id,column1,column2) values (2,'后悔了','可是没有后悔药'); 运行结果： mysql&amp;gt; insert into tb_recovery_test (id,column1,column2) -&amp;gt; values (1,'数据操作需谨慎','定期备份数据'); Query OK, 1 row affected (0.01 sec) mysql&amp;gt; insert into tb_recovery_test (id,column1,column2) -&amp;gt; values (2,'后悔了','可是没有后悔药'); Query OK, 1 row affected (0.01 sec) mysql&amp;gt; select * from tb_recovery_test; +----+--------------+-------------------+ | id | column1 | column2 | +----+--------------+-------------------+ | 1 | 数据操作需谨慎 | 定期备份数据 | | 2 | 后悔了 | 可是没有后悔药 | +----+--------------+-------------------+ 2 rows in set (0.00 sec) 3，修改数据，这里模拟一下真实的场景，对数据进行修改，删除，添加字段操作 update tb_recovery_test set column1 = '数据操作需谨慎,定期备份数据,什么都有就是没有后悔药', column2 = null where id = 2; delete from tb_recovery_test where id = 1; ALTER TABLE tb_recovery_test ADD column3 varchar(32) NULL; insert into tb_recovery_test (id,column1,column2,column3) values (3,'新增了一个字段','新增了一个字段','新增了一个字段'); update tb_recovery_test set column3 = '修改了新增字段的值' where id = 3; update tb_recovery_test set column2 = '修改了column2字段的值' where id = 2; 运行结果： mysql&amp;gt; update tb_recovery_test set column1 = '数据操作需谨慎,定期备份数据,什么都有就是没有后悔药', -&amp;gt; column2 = null -&amp;gt; where id = 2; Query OK, 1 row affected (0.01 sec) Rows matched: 1 Changed: 1 Warnings: 0 mysql&amp;gt; delete from tb_recovery_test where id = 1; Query OK, 1 row affected (0.00 sec) mysql&amp;gt; ALTER TABLE tb_recovery_test ADD column3 varchar(32) NULL; Query OK, 0 rows affected (0.10 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql&amp;gt; insert into tb_recovery_test (id,column1,column2,column3) -&amp;gt; values (3,'新增了一个字段','新增了一个字段','新增了一个字段'); Query OK, 1 row affected (0.01 sec) mysql&amp;gt; update tb_recovery_test set column3 = '修改了新增字段的值' where id = 3; Query OK, 1 row affected (0.00 sec) Rows matched: 1 Changed: 1 Warnings: 0 mysql&amp;gt; update tb_recovery_test set column2 = '修改了column2字段的值' where id = 2; Query OK, 1 row affected (0.01 sec) Rows matched: 1 Changed: 1 Warnings: 0 mysql&amp;gt; select * from tb_recovery_test; +----+-------------------------------------------------+-------------------------+-----------------+ | id | column1 | column2 | column3 | +----+-------------------------------------------------+-------------------------+-----------------+ | 2 | 数据操作需谨慎,定期备份数据,什么都有就是没有后悔药 | 修改了column2字段的值 | NULL | | 3 | 新增了一个字段 | 新增了一个字段 | 修改了新增字段的值 | +----+--------------------------------------------------+------------------------+-----------------+ 2 rows in set (0.00 sec) 4，最后我误操作，把表tb_recovery_test删除 drop table tb_recovery_test; 运行结果： mysql&amp;gt; drop table tb_recovery_test; Query OK, 0 rows affected (0.03 sec) 显然，最后一步操作之后，我们之前所做的操作白费了，还好我们开启了log_bin功能，通过日志来找回误操作删除的数据 通过日志文件恢复 tb_recovery_test 数据 进入到mysql保存日志的目录，通过前面配置可以知道日志文件保存在 /var/log/mysql/ 下 thxopen@Thxopen:/var/log/mysql$ cd /var/log/mysql/ thxopen@Thxopen:/var/log/mysql$ ls error.log mysql-bin.000001 mysql-bin.000002 mysql-bin.000003 mysql-bin.000004 mysql-bin.index thxopen@Thxopen:/var/log/mysql$ ll 总用量 364164 drwxr-x--- 1 mysql adm 512 8月 29 10:06 ./ drwxrwxr-x 1 root syslog 512 11月 18 2017 ../ -rw-r----- 1 mysql adm 108427282 8月 29 10:13 error.log -rw-r----- 1 mysql mysql 154 8月 28 19:37 mysql-bin.000001 -rw-r----- 1 mysql mysql 177 8月 28 19:55 mysql-bin.000002 -rw-r----- 1 mysql mysql 264390804 8月 29 10:06 mysql-bin.000003 -rw-r----- 1 mysql mysql 3411 8月 29 13:14 mysql-bin.000004 -rw-r----- 1 mysql mysql 128 8月 29 10:06 mysql-bin.index 从列出的文件可以看出 mysql-bin.000004 文件是最近改动的，一般来说文件的后缀是增长的，根据实际情况，这里我选择最后一个日志文件进行恢复操作 执行导出日志操作，先看看导出的sql具体是什么样的 sudo mysqlbinlog --base64-output=decode-rows /var/log/mysql/mysql-bin.000004 &amp;gt; ./recovery-decode.sql ps: 添加--base64-output=decode-rows 参数导出的sql文件里不包含数据部分（即insert，delete，update），主要是方便分析，实际导出的 sql是不能加这个参数的 查看导出sql，我截取了文件的开头和结尾部分，中间部分省略 /*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/; /*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/; DELIMITER /*!*/; # at 4 #180829 10:06:42 server id 1 end_log_pos 123 CRC32 0xa3922cf1 Start: binlog v 4, server v 5.7.22-0ubuntu0.16.04.1-log created 180829 10:06:42 at startup # Warning: this binlog is either in use or was not closed properly. ROLLBACK/*!*/; # at 123 #180829 10:06:43 server id 1 end_log_pos 154 CRC32 0xa18892ca Previous-GTIDs # [empty] # at 154 #180829 13:07:48 server id 1 end_log_pos 219 CRC32 0x7e4bd4d6 Anonymous_GTID last_committed=0 sequence_number=1 rbr_only=no SET @@SESSION.GTID_NEXT= 'ANONYMOUS'/*!*/; # at 219 #180829 13:07:48 server id 1 end_log_pos 425 CRC32 0x331aefcb Query thread_id=15 exec_time=0 error_code=0 use `thxopen`/*!*/; SET TIMESTAMP=1535519268/*!*/; SET @@session.pseudo_thread_id=15/*!*/; SET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0, @@session.unique_checks=1, @@session.autocommit=1/*!*/; SET @@session.sql_mode=1436549152/*!*/; SET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/; /*!\C utf8 *//*!*/; SET @@session.character_set_client=33,@@session.collation_connection=33,@@session.collation_server=8/*!*/; SET @@session.lc_time_names=0/*!*/; SET @@session.collation_database=DEFAULT/*!*/; create table tb_recovery_test ( id int not null , column1 varchar(32) null, column2 varchar(32) null ) /*!*/; # at 425 #省略了中间的内容 #省略了中间的内容 #省略了中间的内容 #省略了中间的内容 # at 1970 #180829 13:10:10 server id 1 end_log_pos 2035 CRC32 0x8c8ac254 Anonymous_GTID last_committed=6 sequence_number=7 rbr_only=yes /*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/; SET @@SESSION.GTID_NEXT= 'ANONYMOUS'/*!*/; # at 2035 #180829 13:10:10 server id 1 end_log_pos 2110 CRC32 0x1d22149c Query thread_id=15 exec_time=0 error_code=0 SET TIMESTAMP=1535519410/*!*/; BEGIN /*!*/; # at 2110 #180829 13:10:10 server id 1 end_log_pos 2181 CRC32 0xcccc7fab Table_map: `thxopen`.`tb_recovery_test` mapped to number 168 # at 2181 #180829 13:10:10 server id 1 end_log_pos 2287 CRC32 0x322b3ff6 Write_rows: table id 168 flags: STMT_END_F # at 2287 #180829 13:10:10 server id 1 end_log_pos 2318 CRC32 0xaa8d7acf Xid = 3075 COMMIT/*!*/; # at 2318 #180829 13:10:10 server id 1 end_log_pos 2383 CRC32 0x05b7bd59 Anonymous_GTID last_committed=7 sequence_number=8 rbr_only=yes /*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/; SET @@SESSION.GTID_NEXT= 'ANONYMOUS'/*!*/; # at 2383 #180829 13:10:10 server id 1 end_log_pos 2458 CRC32 0x171d4eab Query thread_id=15 exec_time=0 error_code=0 SET TIMESTAMP=1535519410/*!*/; BEGIN /*!*/; # at 2458 #180829 13:10:10 server id 1 end_log_pos 2529 CRC32 0xe95d3272 Table_map: `thxopen`.`tb_recovery_test` mapped to number 168 # at 2529 #180829 13:10:10 server id 1 end_log_pos 2713 CRC32 0x4386d86f Update_rows: table id 168 flags: STMT_END_F # at 2713 #180829 13:10:10 server id 1 end_log_pos 2744 CRC32 0xcde5fff8 Xid = 3076 COMMIT/*!*/; # at 2744 #180829 13:10:19 server id 1 end_log_pos 2809 CRC32 0x3b9cc08b Anonymous_GTID last_committed=8 sequence_number=9 rbr_only=yes /*!50718 SET TRANSACTION ISOLATION LEVEL READ COMMITTED*//*!*/; SET @@SESSION.GTID_NEXT= 'ANONYMOUS'/*!*/; # at 2809 #180829 13:10:19 server id 1 end_log_pos 2884 CRC32 0xb86bbce3 Query thread_id=15 exec_time=0 error_code=0 SET TIMESTAMP=1535519419/*!*/; BEGIN /*!*/; # at 2884 #180829 13:10:19 server id 1 end_log_pos 2955 CRC32 0x7b3dc472 Table_map: `thxopen`.`tb_recovery_test` mapped to number 168 # at 2955 #180829 13:10:19 server id 1 end_log_pos 3180 CRC32 0x1ff6807f Update_rows: table id 168 flags: STMT_END_F # at 3180 #180829 13:10:19 server id 1 end_log_pos 3211 CRC32 0xda138c1f Xid = 3077 COMMIT/*!*/; # at 3211 #180829 13:14:00 server id 1 end_log_pos 3276 CRC32 0x9e823905 Anonymous_GTID last_committed=9 sequence_number=10 rbr_only=no SET @@SESSION.GTID_NEXT= 'ANONYMOUS'/*!*/; # at 3276 #180829 13:14:00 server id 1 end_log_pos 3411 CRC32 0x2f9c474a Query thread_id=15 exec_time=0 error_code=0 SET TIMESTAMP=1535519640/*!*/; DROP TABLE `tb_recovery_test` /* generated by server */ /*!*/; SET @@SESSION.GTID_NEXT= 'AUTOMATIC' /* added by mysqlbinlog */ /*!*/; DELIMITER ; # End of log file /*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/; /*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/; 从文件里可以看出我一开始的建表语句，也就是我每一步操作都记录在这个日志里，那么我只要把我之前的每一步都再执行一边，数据就能恢复回来，我们按照这个思路操作 1，先确定起始position，这里我选择 end_log_pos 219 ，前面参数解释了，起始点是不包含的所以要选建表语句之前的操作点（也可以选择起始时间 180829 13:07:48） 2，确定截止position end_log_pos 3276 或截止时间 180829 13:14:00 3，导出恢复数据sql #使用position导出sql sudo mysqlbinlog --start-position=219 --stop-position=3276 /var/log/mysql/mysql-bin.000004 &amp;gt; ./recovery-restore.sql #使用时间导出sql sudo mysqlbinlog --start-datetime='2018-08-29 13:07:48' --stop-datetime='2018-08-29 13:14:00' /var/log/mysql/mysql-bin.000004 &amp;gt; ./recovery-restore.sql 下面为导出的sql前半部分，可以看到BINLOG后面有base64的字符，这个就是对数据的操作 /*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/; /*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/; DELIMITER /*!*/; # at 4 #180829 10:06:42 server id 1 end_log_pos 123 CRC32 0xa3922cf1 Start: binlog v 4, server v 5.7.22-0ubuntu0.16.04.1-log created 180829 10:06:42 at startup # Warning: this binlog is either in use or was not closed properly. ROLLBACK/*!*/; BINLOG ' sv+FWw8BAAAAdwAAAHsAAAABAAQANS43LjIyLTB1YnVudHUwLjE2LjA0LjEtbG9nAAAAAAAAAAAA AAAAAAAAAAAAAAAAAACy/4VbEzgNAAgAEgAEBAQEEgAAXwAEGggAAAAICAgCAAAACgoKKioAEjQA AfEskqM= '/*!*/; # at 219 #180829 13:07:48 server id 1 end_log_pos 425 CRC32 0x331aefcb Query thread_id=15 exec_time=0 error_code=0 use `thxopen`/*!*/; SET TIMESTAMP=1535519268/*!*/; SET @@session.pseudo_thread_id=15/*!*/; SET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0, @@session.unique_checks=1, @@session.autocommit=1/*!*/; SET @@session.sql_mode=1436549152/*!*/; SET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/; /*!\C utf8 *//*!*/; SET @@session.character_set_client=33,@@session.collation_connection=33,@@session.collation_server=8/*!*/; SET @@session.lc_time_names=0/*!*/; SET @@session.collation_database=DEFAULT/*!*/; create table tb_recovery_test ( id int not null , column1 varchar(32) null, column2 varchar(32) null ) /*!*/; # at 425 #省略了后面的 #省略了后面的 #省略了后面的 #省略了后面的 4，导入sql到数据库 mysql -uroot -p database_name &amp;lt; recovery-restore.sql ps：还可以加入[-f] 参数，强制执行，即忽略所有错误，根据实际情况使用这个参数 运行结果： thxopen@Thxopen:~$ mysql -uroot -p thxopen &amp;lt; recovery-restore.sql Enter password: thxopen@Thxopen:~$ mysql -uroot -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 17 Server version: 5.7.22-0ubuntu0.16.04.1-log (Ubuntu) Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\h' for help. Type '\c' to clear the current input statement. mysql&amp;gt; use thxopen; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed mysql&amp;gt; show tables; +-------------------+ | Tables_in_thxopen | +-------------------+ | tb_recovery_test | +-------------------+ 1 row in set (0.00 sec) mysql&amp;gt; select * from tb_recovery_test; +----+----------------------------------------------+------------------------+------------------+ | id | column1 | column2 | column3 | +----+----------------------------------------------+------------------------+------------------+ | 2 | 数据操作需谨慎,定期备份数据,什么都有就是没有后悔药 | 修改了column2字段的值 | NULL | | 3 | 新增了一个字段 | 新增了一个字段 | 修改了新增字段的值 | +----+----------------------------------------------+------------------------+------------------+ 2 rows in set (0.00 sec) mysql&amp;gt; 导入之后，重新登录到mysql，查看表，查看数据，已经恢复到drop之前的状态了，到此大功告成，数据恢复成功！ 导入恢复数据到数据库可能会遇到的错误 Duplicate entry 重复的实体，出现此错误代表恢复的sql脚本里，包含创建了实体的语句，重新执行一边，则报错 Duplicate column name 重复的列名称，理由同上 Duplicate key name 重复的键索引，理由同上 Can’t find record in ‘table_name’ 由于业务逻辑，有些数据删除，修改，新增，删除，修改反复这样操作，导致恢复的时候出现此错误 Cannot add or update a child row: a foreign key constraint fails (thxopen.tb_recovery_test, CONSTRAINT FKan5m1ygnxb4ibmq1ncqklji26 FOREIGN KEY (rid) REFERENCES tb_recovery_relate (id)) 由于外键关联，修改表的数据在另一个表中不存在导致 Table ‘table_name’ already exists 重复的表，恢复sql脚本了包含数据库里已经存在的表 Can’t write; duplicate key in table 创建表的外键名称重复了 MySQL server has gone away 由于导入的恢复sql太大，超过了mysql的限制，需要修改配置文件/etc/mysql/mysql.conf.d/mysqld.cnf 里 max_allowed_packet = 16M 配置，根据实际情况调大一些 总结 对于文中的例子，恢复数据是100%的，但是在实际的项目中，虽然开启了log_bin， 但不能想着万事大吉就不管了，我就是惨痛的经历，数据感觉50%都没恢复到。简直是血的教训，血的教训，血的教训啊~ 不过从这个也可以看出系统设计本身的问题，逻辑复杂，耦合度高，关联性太强，比如我误删的数据， 由于表之间的关系比较复杂，恢复出来的数据有很多问题。 主要是如下几个问题： 手动在Intellij Database Console执行的update语句，在恢复之后没有体现出来，字段是null 部分表的数据完全没有，一条数据也没有 由于我是覆盖数据，都是先drop表，然后又create了表，而日志文件又没有从最开始创建表的， 所以执行恢复sql的时候，报了如上列出的所有error，对于重复表，重复字段这些，我把日志里的删除，可以解决， 但是对于数据的关联出错，找不到记录的就太多了，没有办法一一修复，为了执行完成sql，导入的时候加了[-f]参数，忽略所有错误 因为上面这些问题，加上日志本身也不全，导致数据根本没法100%的恢复 说了这么多，还是一句话，没有规矩，不成方圆，做事要小心谨慎，按照一定的流程做事就可以减少犯错误的几率。 定期备份数据，操作数据谨慎 Reference https://www.cnblogs.com/cenalulu/archive/2013/01/08/2850820.html https://blog.csdn.net/leshami/article/details/41962243 http://www.unixfbi.com/499.html http://blog.51cto.com/suifu/1845457 https://www.cnblogs.com/leezhxing/p/3347610.html http://www.hankcs.com/appos/database/mysql-restore-dropped-table.html https://blog.csdn.net/weixin_41004350/article/details/78547005 https://blog.csdn.net/xyz846/article/details/52210542</summary></entry><entry><title type="html">在Ubuntu下安装Redis</title><link href="http://www.thxopen.com/linux/2018/02/27/install-redis-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu下安装Redis" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-redis-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-redis-on-ubuntu.html">&lt;p&gt;Redis是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。&lt;/p&gt;

&lt;h2 id=&quot;安装redis&quot;&gt;安装Redis&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;redis-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;更改默认的端口&quot;&gt;更改默认的端口&lt;/h2&gt;

&lt;p&gt;redis默认的访问端口是&lt;code class=&quot;highlighter-rouge&quot;&gt;6379&lt;/code&gt;，避免端口被恶意程序使用，我们修改redis的默认端口&lt;/p&gt;

&lt;p&gt;打开配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/redis/redis.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/redis/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大概在文件50行左右，有如下内容&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ps:vi编辑器小提示：
&lt;code class=&quot;highlighter-rouge&quot;&gt;:set number&lt;/code&gt; 设置显示文件内容的行号，方便查找内容
&lt;code class=&quot;highlighter-rouge&quot;&gt;/search_content&lt;/code&gt; 斜杠加搜索内容，搜索文件里指定内容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Accept connections on the specified port, default is 6379.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# If port 0 is specified Redis will not listen on a TCP socket.&lt;/span&gt;
port 6379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改端口为自己需要的，保存退出，重启redis即可&lt;/p&gt;

&lt;h2 id=&quot;设置访问密码&quot;&gt;设置访问密码&lt;/h2&gt;

&lt;p&gt;仅仅修改了端口号还是不够的，我们还要设置密码，避免黑客有机可乘&lt;/p&gt;

&lt;p&gt;还是继续打开配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/redis/redis.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/redis/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大概在390行左右，有如下内容&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;################################## SECURITY ###################################&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Require clients to issue AUTH &amp;lt;PASSWORD&amp;gt; before processing any other&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# commands.  This might be useful in environments in which you do not trust&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# others with access to the host running redis-server.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# This should stay commented out for backward compatibility and because most&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# people do not need auth (e.g. they run their own servers).&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Warning: since Redis is pretty fast an outside user can try up to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 150k passwords per second against a good box. This means that you should&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# use a very strong password otherwise it will be very easy to break.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#requirepass foobared&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;去掉注释，把&lt;code class=&quot;highlighter-rouge&quot;&gt;foobared&lt;/code&gt;改为自己的密码，保存退出，重启redis即可&lt;/p&gt;

&lt;h2 id=&quot;设置从任意ip访问redis服务&quot;&gt;设置从任意ip访问redis服务&lt;/h2&gt;

&lt;p&gt;默认情况下，redis只能在本地使用，通过修改配置，可以远程操作redis&lt;/p&gt;

&lt;p&gt;同上，打开配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/redis/redis.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/redis/redis.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大概在69行，有如下内容&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# By default Redis listens for connections from all the network interfaces&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# available on the server. It is possible to listen to just one or multiple&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# interfaces using the &quot;bind&quot; configuration directive, followed by one or&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# more IP addresses.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Examples:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# bind 192.168.1.100 10.0.0.1&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;将 &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; 改为指定的ip地址 &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.100&lt;/code&gt; （允许添加多个ip，用空格隔开），即允许ip为&lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.1.100&lt;/code&gt;机器访问redis服务。（推荐）&lt;/li&gt;
  &lt;li&gt;也可以将 &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; 改为 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.0.0.0&lt;/code&gt; 表示任意ip都可以访问redis服务。 （不推荐）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使用console连接到redis&quot;&gt;使用console连接到redis&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:/etc/redis&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;redis-cli &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 6379 &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; your_password
127.0.0.1:6379&amp;gt; ping
PONG
127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看到输出 &lt;code class=&quot;highlighter-rouge&quot;&gt;PONG&lt;/code&gt; 表示redis已经启动成功&lt;/p&gt;

&lt;h2 id=&quot;使用redis-desktop-manager连接到redis&quot;&gt;使用Redis Desktop Manager连接到Redis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://redisdesktop.com/&quot;&gt;Redis Desktop Manager&lt;/a&gt; 是一个跨平台的，开源的redis桌面管理工具。使用这个工具可以很方便的操作redis。&lt;/p&gt;

&lt;p&gt;从官网选择对应平台的安装包&lt;a href=&quot;https://redisdesktop.com/download&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完成之后打开软件，点击左上角的 【连接到Redis服务器】，填入ip地址、端口和密码，然后点击左下角【测试连接】&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/redis desktop manager.png&quot; alt=&quot;redis desktop manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如上图所示，表示你已经连接成功，你可以使用工具对redis进行操作&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="redis" /><summary type="html">Redis是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。 安装Redis sudo apt-get install redis-server 更改默认的端口 redis默认的访问端口是6379，避免端口被恶意程序使用，我们修改redis的默认端口 打开配置文件/etc/redis/redis.conf sudo vi /etc/redis/redis.conf 大概在文件50行左右，有如下内容 ps:vi编辑器小提示： :set number 设置显示文件内容的行号，方便查找内容 /search_content 斜杠加搜索内容，搜索文件里指定内容 # Accept connections on the specified port, default is 6379. # If port 0 is specified Redis will not listen on a TCP socket. port 6379 修改端口为自己需要的，保存退出，重启redis即可 设置访问密码 仅仅修改了端口号还是不够的，我们还要设置密码，避免黑客有机可乘 还是继续打开配置文件 /etc/redis/redis.conf sudo vi /etc/redis/redis.conf 大概在390行左右，有如下内容 ################################## SECURITY ################################### # Require clients to issue AUTH &amp;lt;PASSWORD&amp;gt; before processing any other # commands. This might be useful in environments in which you do not trust # others with access to the host running redis-server. # # This should stay commented out for backward compatibility and because most # people do not need auth (e.g. they run their own servers). # # Warning: since Redis is pretty fast an outside user can try up to # 150k passwords per second against a good box. This means that you should # use a very strong password otherwise it will be very easy to break. # #requirepass foobared 去掉注释，把foobared改为自己的密码，保存退出，重启redis即可 设置从任意ip访问redis服务 默认情况下，redis只能在本地使用，通过修改配置，可以远程操作redis 同上，打开配置文件 /etc/redis/redis.conf sudo vi /etc/redis/redis.conf 大概在69行，有如下内容 # By default Redis listens for connections from all the network interfaces # available on the server. It is possible to listen to just one or multiple # interfaces using the &quot;bind&quot; configuration directive, followed by one or # more IP addresses. # # Examples: # # bind 192.168.1.100 10.0.0.1 bind 127.0.0.1 将 127.0.0.1 改为指定的ip地址 192.168.1.100 （允许添加多个ip，用空格隔开），即允许ip为192.168.1.100机器访问redis服务。（推荐） 也可以将 127.0.0.1 改为 0.0.0.0 表示任意ip都可以访问redis服务。 （不推荐） 使用console连接到redis thxopen@Thxopen:/etc/redis$ redis-cli -p 6379 -a your_password 127.0.0.1:6379&amp;gt; ping PONG 127.0.0.1:6379&amp;gt; 看到输出 PONG 表示redis已经启动成功 使用Redis Desktop Manager连接到Redis Redis Desktop Manager 是一个跨平台的，开源的redis桌面管理工具。使用这个工具可以很方便的操作redis。 从官网选择对应平台的安装包下载 安装完成之后打开软件，点击左上角的 【连接到Redis服务器】，填入ip地址、端口和密码，然后点击左下角【测试连接】 如上图所示，表示你已经连接成功，你可以使用工具对redis进行操作 返回目录</summary></entry><entry><title type="html">在Ubuntu下安装RabbitMQ</title><link href="http://www.thxopen.com/linux/2018/02/27/install-rabbitmq-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu下安装RabbitMQ" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-rabbitmq-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-rabbitmq-on-ubuntu.html">&lt;p&gt;RabbitMQ是一套开源（MPL）的消息队列服务软件，是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 
的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 写成。&lt;/p&gt;

&lt;h2 id=&quot;安装rabbitmq&quot;&gt;安装RabbitMQ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;第一步：添加源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deb http://www.rabbitmq.com/debian/ testing main'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/rabbitmq.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第二步：添加秘钥
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;-O-&lt;/span&gt; https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第三步：更新源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第四步：安装
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rabbitmq-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;开启web管理界面&quot;&gt;开启WEB管理界面&lt;/h2&gt;

&lt;p&gt;RabbitMQ默认没有打开WEB管理界面，需要手动操作&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmq-plugins &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rabbitmq_management
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;通过上面的命令即可开启，打开浏览器访问 http://127.0.0.1:15672 即可看到如下界面&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/rabbitmq_login.png&quot; alt=&quot;RabbitMQ登录界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用默认用户guest，密码guest可以登录&lt;/p&gt;

&lt;h2 id=&quot;允许非本地访问管理界面&quot;&gt;允许非本地访问管理界面&lt;/h2&gt;

&lt;p&gt;打开管理界面的功能开关后，虽然guest用户可以访问，但远程访问还需要配置用户才能可以&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第一步：添加用户
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl add_user demo 123456
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl list_users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;添加一个用户名demo，密码为123456的用户记录&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;第二步：设置权限
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl set_permissions &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt; demo &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl list_permissions &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;设置demo用户可以从任意ip访问该管理界面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;第三步：设置角色
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl set_user_tags demo administrator
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rabbitmqctl list_users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;设置demo用户为管理员权限&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完成上面操作之后即可使用demo用户登录，登录成功之后可以看到如下界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/rabbitmq_dashborad.png&quot; alt=&quot;RabbitMQ管理界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://blog.csdn.net/rickey17/article/details/72756766&lt;/li&gt;
    &lt;li&gt;https://blog.haohtml.com/archives/15249&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="rabbitmq" /><summary type="html">RabbitMQ是一套开源（MPL）的消息队列服务软件，是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 写成。 安装RabbitMQ 第一步：添加源 echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list 第二步：添加秘钥 wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add 第三步：更新源 sudo apt-get update 第四步：安装 sudo apt-get install rabbitmq-server 开启WEB管理界面 RabbitMQ默认没有打开WEB管理界面，需要手动操作 sudo rabbitmq-plugins enable rabbitmq_management 通过上面的命令即可开启，打开浏览器访问 http://127.0.0.1:15672 即可看到如下界面 使用默认用户guest，密码guest可以登录 允许非本地访问管理界面 打开管理界面的功能开关后，虽然guest用户可以访问，但远程访问还需要配置用户才能可以 第一步：添加用户 sudo rabbitmqctl add_user demo 123456 sudo rabbitmqctl list_users 添加一个用户名demo，密码为123456的用户记录 第二步：设置权限 sudo rabbitmqctl set_permissions -p &quot;/&quot; demo &quot;.*&quot; &quot;.*&quot; &quot;.*&quot; sudo rabbitmqctl list_permissions -p / 设置demo用户可以从任意ip访问该管理界面 第三步：设置角色 sudo rabbitmqctl set_user_tags demo administrator sudo rabbitmqctl list_users 设置demo用户为管理员权限 完成上面操作之后即可使用demo用户登录，登录成功之后可以看到如下界面： 返回目录 Reference: https://blog.csdn.net/rickey17/article/details/72756766 https://blog.haohtml.com/archives/15249</summary></entry><entry><title type="html">在Ubuntu下安装Nginx</title><link href="http://www.thxopen.com/linux/2018/02/27/install-nginx-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu下安装Nginx" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-nginx-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-nginx-on-ubuntu.html">&lt;p&gt;Nginx是一个异步框架的 Web服务器，也可以用作反向代理，负载平衡器 和 HTTP缓存。&lt;/p&gt;

&lt;h2 id=&quot;安装nginx&quot;&gt;安装Nginx&lt;/h2&gt;

&lt;p&gt;在Ubuntu下安装Nginx非常简单，只需要几行命令即可安装完成&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认安装后会自己启动，打开浏览器访问127.0.0.1即可看到nginx默认的欢迎界面&lt;/p&gt;

&lt;p&gt;ps：确认80端口没有被其他应用程序占用&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://www.jianshu.com/p/7cb1a824333e&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;permission-denied&quot;&gt;Permission denied&lt;/h2&gt;

&lt;p&gt;由于我使用Nginx对本地路径做映射，默认情况下nginx会创建自己的用户名和用户组，这样我用非Nginx的用户创建的文件可能会不能访问，
出现Permission denied的错误提示，这里我修改了配置文件让nginx使用同样的用户&lt;/p&gt;

&lt;p&gt;配置文件一般会在&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个文件第一行即是&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user nginx&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 修改成自己的用户，这里我用户名是ubuntu&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#下面是修改后的&lt;/span&gt;
user ubuntu&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改完后保存退出，然后重启nginx即可&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service nginx restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;如何安装最新版nginx&quot;&gt;如何安装最新版Nginx&lt;/h2&gt;

&lt;h4 id=&quot;2018年7月7日-更新&quot;&gt;2018年7月7日 更新&lt;/h4&gt;

&lt;p&gt;默认情况下，通过命令安装的Nginx不是官方的最新版本，而是一个相对稳定的版本（1.10.0）。&lt;/p&gt;

&lt;p&gt;在项目中我需要用到gRPC，希望也能通过Nginx来进行负载均衡，发现Nginx从1.13.10版本才开始支持gRPC，迫使我要升级Nginx&lt;/p&gt;

&lt;p&gt;哪怎么通过命令安装官方最新的Nginx呢？下面来告诉大家，希望能帮助到需要的小伙伴&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第一步：找到最新的&lt;a href=&quot;https://nginx.org/en/linux_packages.html&quot;&gt;发行版&lt;/a&gt; ,添加源到本地apt-get sources列表中，
如果你的系统是ubuntu 16.04，则可以使用下面的源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deb http://nginx.org/packages/mainline/ubuntu/ xenial nginx'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/nginx.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ps: 如果是Ubuntu 14.04就把&lt;code class=&quot;highlighter-rouge&quot;&gt;xenial&lt;/code&gt;换成&lt;code class=&quot;highlighter-rouge&quot;&gt;trusty&lt;/code&gt;，附一张对照表&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;系统版本&lt;/th&gt;
      &lt;th&gt;Codename&lt;/th&gt;
      &lt;th&gt;支持平台&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;12.04&lt;/td&gt;
      &lt;td&gt;precise&lt;/td&gt;
      &lt;td&gt;x86_64, i386&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;14.04&lt;/td&gt;
      &lt;td&gt;trusty&lt;/td&gt;
      &lt;td&gt;x86_64, i386, aarch64/arm64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;15.10&lt;/td&gt;
      &lt;td&gt;wily&lt;/td&gt;
      &lt;td&gt;x86_64, i386&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;16.04&lt;/td&gt;
      &lt;td&gt;xenial&lt;/td&gt;
      &lt;td&gt;x86_64, i386&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;第二步：添加秘钥
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;-O-&lt;/span&gt; http://nginx.org/keys/nginx_signing.key | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第三步：更新源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第四步：安装最新Nginx
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第五步：查看版本
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
nginx version: nginx/1.15.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看到，已经是最新的1.15.0&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;https://juejin.im/entry/5a274c7751882533d022eec2&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="nginx" /><summary type="html">Nginx是一个异步框架的 Web服务器，也可以用作反向代理，负载平衡器 和 HTTP缓存。 安装Nginx 在Ubuntu下安装Nginx非常简单，只需要几行命令即可安装完成 sudo apt-get install nginx 默认安装后会自己启动，打开浏览器访问127.0.0.1即可看到nginx默认的欢迎界面 ps：确认80端口没有被其他应用程序占用 Reference https://www.jianshu.com/p/7cb1a824333e Permission denied 由于我使用Nginx对本地路径做映射，默认情况下nginx会创建自己的用户名和用户组，这样我用非Nginx的用户创建的文件可能会不能访问， 出现Permission denied的错误提示，这里我修改了配置文件让nginx使用同样的用户 配置文件一般会在 /etc/nginx/nginx.conf 这个文件第一行即是 user nginx; # 修改成自己的用户，这里我用户名是ubuntu #下面是修改后的 user ubuntu; 修改完后保存退出，然后重启nginx即可 sudo service nginx restart 如何安装最新版Nginx 2018年7月7日 更新 默认情况下，通过命令安装的Nginx不是官方的最新版本，而是一个相对稳定的版本（1.10.0）。 在项目中我需要用到gRPC，希望也能通过Nginx来进行负载均衡，发现Nginx从1.13.10版本才开始支持gRPC，迫使我要升级Nginx 哪怎么通过命令安装官方最新的Nginx呢？下面来告诉大家，希望能帮助到需要的小伙伴 第一步：找到最新的发行版 ,添加源到本地apt-get sources列表中， 如果你的系统是ubuntu 16.04，则可以使用下面的源 echo 'deb http://nginx.org/packages/mainline/ubuntu/ xenial nginx' | sudo tee /etc/apt/sources.list.d/nginx.list ps: 如果是Ubuntu 14.04就把xenial换成trusty，附一张对照表 系统版本 Codename 支持平台 12.04 precise x86_64, i386 14.04 trusty x86_64, i386, aarch64/arm64 15.10 wily x86_64, i386 16.04 xenial x86_64, i386 第二步：添加秘钥 wget -O- http://nginx.org/keys/nginx_signing.key | sudo apt-key add 第三步：更新源 sudo apt-get update 第四步：安装最新Nginx sudo apt-get install nginx 第五步：查看版本 nginx -v nginx version: nginx/1.15.0 可以看到，已经是最新的1.15.0 返回目录 Reference https://juejin.im/entry/5a274c7751882533d022eec2</summary></entry><entry><title type="html">在Ubuntu下安装MySQL</title><link href="http://www.thxopen.com/linux/2018/02/27/install-mysql-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu下安装MySQL" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-mysql-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-mysql-on-ubuntu.html">&lt;p&gt;MySQL是一个开放源代码的关系数据库管理系统，性能高、成本低、可靠性好，已经成为最流行的开源数据库。&lt;/p&gt;

&lt;h2 id=&quot;安装mysql&quot;&gt;安装MySQL&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql-server mysql-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装过程中会要求输入root用户的密码，记下自己输入的密码即可&lt;/p&gt;

&lt;h2 id=&quot;更改默认端口&quot;&gt;更改默认端口&lt;/h2&gt;

&lt;p&gt;mysql默认的端口是3306，一般情况下我们会更改默认端口，当你数据库暴露在外网时可以一定程度上防止攻击&lt;/p&gt;

&lt;p&gt;编辑目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/mysql/mysql.conf.d/mysqld.cnf&lt;/code&gt; 下mysql的配置文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /etc/mysql/mysql.conf.d/mysqld.cnf

&lt;span class=&quot;c&quot;&gt;# * Basic Settings&lt;/span&gt;
user            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mysql
pid-file        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/mysqld/mysqld.pid
socket          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/mysqld/mysqld.sock
port            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 7777   &lt;span class=&quot;c&quot;&gt;#修改自己需要的端口&lt;/span&gt;
basedir         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr
datadir         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/lib/mysql
tmpdir          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /tmp
lc-messages-dir &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr/share/mysql
skip-external-locking

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里演示把默认端口修改为7777，保存修改，重启mysql即可&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service mysql restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重启之后，查询端口来验证是否修改成功&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat &lt;span class=&quot;nt&quot;&gt;-nlt&lt;/span&gt;|grep 7777

tcp        0      0 0.0.0.0:7777            0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;               LISTEN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;授权可以访问的客户端&quot;&gt;授权可以访问的客户端&lt;/h2&gt;

&lt;p&gt;默认情况下，mysql只允许本地操作，如果我们的mysql安装在服务器上，避免不了远程连接，为了方便，这里我允许所有ip远程操作mysql&lt;/p&gt;

&lt;p&gt;首先登录到mysql，授权root用户可以从任意ip获得所有特权&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
Enter password:

mysql&amp;gt; grant all privileges on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt; identified by &lt;span class=&quot;s1&quot;&gt;'你的密码'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; flush privileges&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ps：为了安全，你可以指定ip和操作权限&lt;/p&gt;

&lt;p&gt;然后，更改mysql配置文件允许从任意ip连接&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim /etc/mysql/mysql.conf.d/mysqld.cnf

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Instead of skip-networking the default is now to listen only on&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# localhost which is more compatible and is not less secure.&lt;/span&gt;
bind-address            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0.0.0.0  &lt;span class=&quot;c&quot;&gt;#把127.0.0.1修改为0.0.0.0即可&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service mysql restart

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;把&lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;修改为&lt;code class=&quot;highlighter-rouge&quot;&gt;0.0.0.0&lt;/code&gt;即可，然后保存修改，重启mysql生效&lt;/p&gt;

&lt;h2 id=&quot;在console中使用mysql&quot;&gt;在console中使用mysql&lt;/h2&gt;

&lt;p&gt;检测是否可以正常使用mysql，打开命令行，使用root用户和刚刚输入的密码连接到mysql&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;thxopen@Thxopen:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
Enter password:

Welcome to the MySQL monitor.  Commands end with &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Your MySQL connection &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;is 6
Server version: 5.7.22-0ubuntu0.16.04.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;span class=&quot;s1&quot;&gt;'help;'&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;'\h'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help. Type &lt;span class=&quot;s1&quot;&gt;'\c'&lt;/span&gt; to clear the current input statement.

mysql&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;出现上述代表mysql安装成功，可以正常使用&lt;/p&gt;

&lt;h2 id=&quot;使用mysql-workbench操作mysql数据&quot;&gt;使用MySQL Workbench操作mysql数据&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mysql.com/products/workbench/&quot;&gt;MySQL Workbench&lt;/a&gt; 是一个可视化的，可以对mysql配置、用户管理、备份、数据建模、SQL开发等进行操作的综合管理工具。
支持在Windows, Linux 和 Mac OS X上使用。&lt;/p&gt;

&lt;p&gt;在官网上&lt;a href=&quot;https://dev.mysql.com/downloads/workbench/&quot;&gt;下载&lt;/a&gt;对应平台的安装包，安装即可使用。&lt;/p&gt;

&lt;p&gt;工具欢迎面如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/mysql workbench dashboard.png&quot; alt=&quot;mysql workbench dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;界面看起来比较清爽，简洁，但是功能非常强大。&lt;/p&gt;

&lt;p&gt;可以通过【加号】按钮新建一个mysql连接，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/mysql new connection.png&quot; alt=&quot;mysql new connection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;输入mysql服务器地址、端口、密码，点击【Test Connection】检查是否连接成功。&lt;/p&gt;

&lt;p&gt;进入MySQL Workbench主界面，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/mysql sql console.png&quot; alt=&quot;mysql sql console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;主要关注的是中间部分，分别有sql脚本输入区域，表格数据显示区域，历史脚本显示区域&lt;/p&gt;

&lt;p&gt;整体来说MySQL Workbench还是一个不错的可视化的工具，官方出品，推荐一下。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;http://www.jianshu.com/p/3111290b87f4&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="nginx" /><summary type="html">MySQL是一个开放源代码的关系数据库管理系统，性能高、成本低、可靠性好，已经成为最流行的开源数据库。 安装MySQL sudo apt-get install mysql-server mysql-client 安装过程中会要求输入root用户的密码，记下自己输入的密码即可 更改默认端口 mysql默认的端口是3306，一般情况下我们会更改默认端口，当你数据库暴露在外网时可以一定程度上防止攻击 编辑目录 /etc/mysql/mysql.conf.d/mysqld.cnf 下mysql的配置文件： sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf # * Basic Settings user = mysql pid-file = /var/run/mysqld/mysqld.pid socket = /var/run/mysqld/mysqld.sock port = 7777 #修改自己需要的端口 basedir = /usr datadir = /var/lib/mysql tmpdir = /tmp lc-messages-dir = /usr/share/mysql skip-external-locking 这里演示把默认端口修改为7777，保存修改，重启mysql即可 sudo service mysql restart 重启之后，查询端口来验证是否修改成功 netstat -nlt|grep 7777 tcp 0 0 0.0.0.0:7777 0.0.0.0:* LISTEN 授权可以访问的客户端 默认情况下，mysql只允许本地操作，如果我们的mysql安装在服务器上，避免不了远程连接，为了方便，这里我允许所有ip远程操作mysql 首先登录到mysql，授权root用户可以从任意ip获得所有特权 mysql -uroot -p Enter password: mysql&amp;gt; grant all privileges on *.* to 'root'@'%' identified by '你的密码'; mysql&amp;gt; flush privileges; mysql&amp;gt; exit; ps：为了安全，你可以指定ip和操作权限 然后，更改mysql配置文件允许从任意ip连接 sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf # # Instead of skip-networking the default is now to listen only on # localhost which is more compatible and is not less secure. bind-address = 0.0.0.0 #把127.0.0.1修改为0.0.0.0即可 sudo service mysql restart 把127.0.0.1修改为0.0.0.0即可，然后保存修改，重启mysql生效 在console中使用mysql 检测是否可以正常使用mysql，打开命令行，使用root用户和刚刚输入的密码连接到mysql thxopen@Thxopen:~$ mysql -uroot -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 6 Server version: 5.7.22-0ubuntu0.16.04.1 (Ubuntu) Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type 'help;' or '\h' for help. Type '\c' to clear the current input statement. mysql&amp;gt; 出现上述代表mysql安装成功，可以正常使用 使用MySQL Workbench操作mysql数据 MySQL Workbench 是一个可视化的，可以对mysql配置、用户管理、备份、数据建模、SQL开发等进行操作的综合管理工具。 支持在Windows, Linux 和 Mac OS X上使用。 在官网上下载对应平台的安装包，安装即可使用。 工具欢迎面如下图所示： 界面看起来比较清爽，简洁，但是功能非常强大。 可以通过【加号】按钮新建一个mysql连接，如下图所示： 输入mysql服务器地址、端口、密码，点击【Test Connection】检查是否连接成功。 进入MySQL Workbench主界面，如下图所示： 主要关注的是中间部分，分别有sql脚本输入区域，表格数据显示区域，历史脚本显示区域 整体来说MySQL Workbench还是一个不错的可视化的工具，官方出品，推荐一下。 返回目录 Reference http://www.jianshu.com/p/3111290b87f4</summary></entry><entry><title type="html">在Ubuntu下安装JAVA开发环境</title><link href="http://www.thxopen.com/linux/2018/02/27/install-java-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu下安装JAVA开发环境" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-java-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-java-on-ubuntu.html">&lt;p&gt;JDK即Java Development Kit，java开发工具包，是java开发人员开发中需要用到的软件开发工具包。&lt;/p&gt;

&lt;h2 id=&quot;安装jdk&quot;&gt;安装JDK&lt;/h2&gt;

&lt;p&gt;在Ubuntu下安装java开发环境有两种途径：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过apt-get在线安装&lt;/li&gt;
  &lt;li&gt;下载tar包，自行解压安装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文介绍的是第一种方式，使用apt-get安装java开发环境&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第一步：添加源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository ppa:webupd8team/java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第二步：更新源
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;第三步：安装jdk，这里选择的是jdk 8
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;oracle-java8-installer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/images/post/linux/ubuntu/oracle1.png&quot; alt=&quot;oracle java 条款&quot; /&gt;
&lt;img src=&quot;/assets/images/post/linux/ubuntu/oracle2.png&quot; alt=&quot;oracle java 条款&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装过程中，会提示同意条款，输入y即可&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第四步：检查是否安装成功
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;控制台输出如下，表示安装成功&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java version &lt;span class=&quot;s2&quot;&gt;&quot;1.8.0_161&quot;&lt;/span&gt;
Java&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.8.0_161-b12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 25.161-b12, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html&quot;&gt;返回目录&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reference&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;http://www.cnblogs.com/a2211009/p/4265225.html&lt;/li&gt;
    &lt;li&gt;http://blog.csdn.net/yuzaipiaofei/article/details/7281723&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="jdk" /><category term="java" /><summary type="html">JDK即Java Development Kit，java开发工具包，是java开发人员开发中需要用到的软件开发工具包。 安装JDK 在Ubuntu下安装java开发环境有两种途径： 通过apt-get在线安装 下载tar包，自行解压安装 本文介绍的是第一种方式，使用apt-get安装java开发环境 第一步：添加源 sudo add-apt-repository ppa:webupd8team/java 第二步：更新源 sudo apt-get update 第三步：安装jdk，这里选择的是jdk 8 sudo apt-get install oracle-java8-installer 安装过程中，会提示同意条款，输入y即可 第四步：检查是否安装成功 java -version 控制台输出如下，表示安装成功 java version &quot;1.8.0_161&quot; Java(TM) SE Runtime Environment (build 1.8.0_161-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode) 返回目录 Reference http://www.cnblogs.com/a2211009/p/4265225.html http://blog.csdn.net/yuzaipiaofei/article/details/7281723</summary></entry><entry><title type="html">在Ubuntu上安装常用的和Java相关的工具</title><link href="http://www.thxopen.com/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html" rel="alternate" type="text/html" title="在Ubuntu上安装常用的和Java相关的工具" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>http://www.thxopen.com/linux/2018/02/27/install-java-ee-environment-on-ubuntu</id><content type="html" xml:base="http://www.thxopen.com/linux/2018/02/27/install-java-ee-environment-on-ubuntu.html">&lt;p&gt;最近工作中经常需要在新服务器上搭建环境，项目中用到的工具有Tomcat、RabbitMQ、Nginx、Redis、MySQL。&lt;/p&gt;

&lt;p&gt;还别说，这几个工具把他安装好配置好，需要花的时间还是挺长的。在多次安装和配置过程中我也遇到一些问题，也总结了些经验。&lt;/p&gt;

&lt;p&gt;在此纪录下来，方便自己也方便他人。&lt;/p&gt;

&lt;p&gt;本篇为目录，列出标题，我在单独的文章里再详细介绍每个工具的安装和使用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/linux/2018/02/27/install-java-on-ubuntu.html&quot;&gt;在Ubuntu下安装JAVA开发环境&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux/2018/02/27/install-rabbitmq-on-ubuntu.html&quot;&gt;在Ubuntu下安装RabbitMQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux/2018/02/27/install-nginx-on-ubuntu.html&quot;&gt;在Ubuntu下安装Nginx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux/2018/02/27/install-mysql-on-ubuntu.html&quot;&gt;在Ubuntu下安装MySQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux/2018/02/27/install-redis-on-ubuntu.html&quot;&gt;在Ubuntu下安装Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的方法同样适用 Win10 带的子系统 Bash on Windows ，都是Ubuntu，本人电脑就是直接在子系统里安装这些软件用来开发，
比起安装虚拟机要方便很多，希望这一系列文章对大家有所帮助&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="ubuntu" /><category term="tomcat" /><category term="rabbitmq" /><category term="nginx" /><category term="redis" /><category term="jdk" /><category term="mysql" /><summary type="html">最近工作中经常需要在新服务器上搭建环境，项目中用到的工具有Tomcat、RabbitMQ、Nginx、Redis、MySQL。 还别说，这几个工具把他安装好配置好，需要花的时间还是挺长的。在多次安装和配置过程中我也遇到一些问题，也总结了些经验。 在此纪录下来，方便自己也方便他人。 本篇为目录，列出标题，我在单独的文章里再详细介绍每个工具的安装和使用。 在Ubuntu下安装JAVA开发环境 在Ubuntu下安装RabbitMQ 在Ubuntu下安装Nginx 在Ubuntu下安装MySQL 在Ubuntu下安装Redis 上面的方法同样适用 Win10 带的子系统 Bash on Windows ，都是Ubuntu，本人电脑就是直接在子系统里安装这些软件用来开发， 比起安装虚拟机要方便很多，希望这一系列文章对大家有所帮助</summary></entry><entry><title type="html">初探oss-事件通知（http endpoint）</title><link href="http://www.thxopen.com/storage/2018/02/22/first-time-to-use-oss-events-httpendpoint.html" rel="alternate" type="text/html" title="初探oss-事件通知（http endpoint）" /><published>2018-02-22T00:00:00+08:00</published><updated>2018-02-22T00:00:00+08:00</updated><id>http://www.thxopen.com/storage/2018/02/22/first-time-to-use-oss-events-httpendpoint</id><content type="html" xml:base="http://www.thxopen.com/storage/2018/02/22/first-time-to-use-oss-events-httpendpoint.html">&lt;h2 id=&quot;初识oss&quot;&gt;初识oss&lt;/h2&gt;

&lt;p&gt;it技术更新换代太快了，我们的思想也必须跟上才行。&lt;/p&gt;

&lt;p&gt;最近项目里需要用到文件上传，我想想挺简单的啊，关于spring mvc文件上传网上的示例太多了啊，抄一抄，三下五除二就弄好了。&lt;/p&gt;

&lt;p&gt;好景不长，文件上传问题太多了，虽然从头到尾只出了两个问题，但是用户体验太差了，该怎么办呢？又要支持大文件，又要支持批量，
又在web端，感觉再好的插件也拯救不了我了。于是问问公司的前辈，才刚说上几句，前辈就说怎么不用oss？&lt;/p&gt;

&lt;p&gt;啥？oss是什么？oss（Object Storage Service）即对象存储服务。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;海量、安全、低成本、高可靠的云存储服务，提供99.999999999%的数据可靠性。
使用RESTful API 可以在互联网任何位置存储和访问，容量和处理能力弹性扩展，多种存储类型供选择全面优化存储成本。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;了解到这里，我感觉这个就是能拯救我的方案了，立马查阅文档开始试试。&lt;/p&gt;

&lt;h2 id=&quot;确定使用场景&quot;&gt;确定使用场景&lt;/h2&gt;

&lt;p&gt;根据之前的需求，用户通过网站上传图片到服务器上，然后对图片进行识别处理。&lt;/p&gt;

&lt;p&gt;改用oss方案后，用户通过使用&lt;a href=&quot;https://market.aliyun.com/products/53690006/cmgj000281.html&quot;&gt;oss控制台客户端&lt;/a&gt;上传文件,项目监听到文件上传完成，再获取资源进行识别处理。&lt;/p&gt;

&lt;p&gt;使用oss之后逻辑稍有改变，由于文件存放不在同一个地方，这里需要使用oss提供的&lt;a href=&quot;https://help.aliyun.com/document_detail/52656.html&quot;&gt;事件通知&lt;/a&gt;来完成。&lt;/p&gt;

&lt;p&gt;oss事件通知整体架构图如下（借用图一张）
&lt;img src=&quot;/assets/images/post/oss-first/first-meet-oss1.png&quot; alt=&quot;oss事件通知整体架构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由图中可以看到，oss事件通知提供了两种方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HttpServer http的方式，即配置一个自己项目的访问地址（公网），当匹配规则匹配到时，往该地址推送数据&lt;/li&gt;
  &lt;li&gt;MNS Queue 队列的方式，即在项目中订阅oss提供的主题，获取匹配规则推送的数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里要介绍的是Http方式，后面如果需要再使用队列方式试试。&lt;/p&gt;

&lt;h2 id=&quot;小试牛刀&quot;&gt;小试牛刀&lt;/h2&gt;

&lt;p&gt;关于oss事件通知的配置，阿里云已经提供了一篇文档 &lt;a href=&quot;https://yq.aliyun.com/articles/71881&quot;&gt;如何使用OSS事件通知功能？&lt;/a&gt;，
虽然讲的很清楚了（事后才觉得清楚，在没会之前是蒙圈的），但我觉得有必要把一些要点再提一下，少踩坑！&lt;/p&gt;

&lt;h3 id=&quot;第一步配置事件通知&quot;&gt;第一步：配置事件通知&lt;/h3&gt;

&lt;p&gt;简单理解，就是当bucket有文件变化（上传，覆盖，删除，追加……）时给予通知&lt;/p&gt;

&lt;p&gt;帮助文档提供的截图和截止文章当前时间已经有所不同，下面带大家一步一步配置&lt;/p&gt;

&lt;p&gt;首先进入&lt;a href=&quot;https://oss.console.aliyun.com/overview&quot;&gt;oss管理控制台&lt;/a&gt;如下图：
&lt;img src=&quot;/assets/images/post/oss-first/oss-console.png&quot; alt=&quot;oss-console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选中bucket，右侧页面进入到该bucket的相关信息，然后点击【事件通知】，由于我已经创建了一条规则，所以这里
能看到有一条规则
&lt;img src=&quot;/assets/images/post/oss-first/create-rule.png&quot; alt=&quot;create-rule&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击【创建规则】,在右侧会弹出界面，如下图所示，需要填写规则名称，事件类型，资源描述，接受终端
&lt;img src=&quot;/assets/images/post/oss-first/creating-rule.png&quot; alt=&quot;creating-rule&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;规则名称
    &lt;ul&gt;
      &lt;li&gt;规则的唯一标识，同一账号同一 Region 同一产品下规则名称不能重名。字符必须是英文，数字，横划线，长度不超过 128 个&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;事件类型
    &lt;ul&gt;
      &lt;li&gt;选择您想要触发通知的事件，可以选择多个。同样的事件不可以多次配置在同一资源上&lt;/li&gt;
      &lt;li&gt;PutObject ，创建/覆盖文件：简单上传&lt;/li&gt;
      &lt;li&gt;这里我只举一个例子，更多其他的事件类型参考&lt;a href=&quot;https://help.aliyun.com/document_detail/52656.html#sjtz&quot;&gt;事件类型列表&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;资源描述
    &lt;ul&gt;
      &lt;li&gt;资源描述可以是全名、前缀、后缀以及前后缀，不同资源描述不能有交集。&lt;/li&gt;
      &lt;li&gt;在本次实例中，我配置了全名，前后缀
        &lt;ul&gt;
          &lt;li&gt;第一行代表固定文件名（movie.zip）上传，就会触发事件&lt;/li&gt;
          &lt;li&gt;第二行代表以m开头的文件上传，就会触发事件&lt;/li&gt;
          &lt;li&gt;第三行代表.jpg格式的文件上传，就会触发事件&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;在我第一次使用时这个地方没有理解资源描述是什么意思，我上传文件怎么都不触发，直到发送工单，才得知是这里的问题&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;接受终端
    &lt;ul&gt;
      &lt;li&gt;有两种可以选择，一个是http，一个是队列，本篇讲的是http方式，这里我选择http&lt;/li&gt;
      &lt;li&gt;http://domain.com:8080/oss/listener 地址是公网能够访问到的&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;填写完毕后，点击底部的【确认】按钮确认添加该规则，确认之后就会像之前看到的，出现一条规则。&lt;/p&gt;

&lt;p&gt;这里需要注意的是，每添加一条规则会自动创建一条对应的主题，可以在&lt;a href=&quot;https://mns.console.aliyun.com/#/topics&quot;&gt;消息服务控制台&lt;/a&gt;查看到该主题，如下图：
&lt;img src=&quot;/assets/images/post/oss-first/oss-topic.png&quot; alt=&quot;oss-topic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;还需要注意的是图中指出的&lt;a href=&quot;https://www.aliyun.com/price/product#/mns/detail&quot;&gt;温馨提示&lt;/a&gt;,主题实例是会产生费用的&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;到这里，在阿里云控制台配置的工作就已经完成了，接下来要做的就是实现接受消息&lt;/p&gt;

&lt;h3 id=&quot;第二步接受消息通知&quot;&gt;第二步：接受消息通知&lt;/h3&gt;

&lt;p&gt;在上一步接受终端操作中我配置了一个可以公网访问的地址&lt;code class=&quot;highlighter-rouge&quot;&gt;http://domain.com:8080/oss/listener&lt;/code&gt;，他的作用就是当规则匹配之后
oss会向该地址发送消息。根据oss技术人员提供的信息，我们可以从 &lt;a href=&quot;https://help.aliyun.com/document_detail/27508.html&quot;&gt;MNS Java SDK&lt;/a&gt; 
这个页面下载&lt;a href=&quot;http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/27508/cn_zh/1491978276754/aliyun-sdk-mns-samples-1.1.8.zip?spm=a2c4g.11186623.2.5.KVAOlJ&amp;amp;file=aliyun-sdk-mns-samples-1.1.8.zip&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解压下载后的文件，我们需要关注的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpEndpoint.java&lt;/code&gt; 这个文件，这里对该文件代码不做详细的解释，根据自己项目的环境，做相应改动即可&lt;/p&gt;

&lt;p&gt;我的项目环境是spring mvc，下面贴出我已经调试好的代码：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.extern.slf4j.Slf4j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.commons.codec.binary.Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.http.HttpEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.http.HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.http.entity.InputStreamEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.http.ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.ResponseBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.UnsupportedEncodingException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Enumeration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * oss文件上传成功
 *
 * @return
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/oss/listener&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ossfileuploadsuccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oss客户端上传文件&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;HttpEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContentLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ENGLISH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;


        &lt;span class=&quot;n&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headerNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeaderNames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headerNames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasMoreElements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headerNames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}:{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//verify request&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certHeader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x-mns-signing-cert-url&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;certHeader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SigningCerURL Header not found&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SigningCerURL Header not found&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SigningCertURL empty&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SigningCertURL empty&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decodeBase64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SigningCertURL:\t&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;


        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;authenticate fail&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;authenticate fail&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//parser content of simplified notification&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;StringBuffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageBodyAsBytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messageBodyAsBytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decodeBase64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messageBodyAsBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//这里的result就是文件的信息&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Simplified Notification: \n {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;处理oss文件线程启动完毕,耗时：{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Not support encoding: UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_INTERNAL_SERVER_ERROR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Not support encoding: UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oss文件上传监听系统错误&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SC_INTERNAL_SERVER_ERROR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;system error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;noContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * check if this request comes from MNS Server
 *
 * @param method,  http method
 * @param uri,     http uri
 * @param headers, http headers
 * @param cert,    cert url
 * @return true if verify pass
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2sign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSignStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//System.out.println(str2sign);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//这里需要注意大小写，官方给出的代码这里是大写A，在我实际操作中为小写，到底是什么，需要结合实际情况&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;authorization&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decodedSign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decodeBase64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//get cert, and verify this request with this cert&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//String cert = &quot;http://mnstest.oss-cn-hangzhou.aliyuncs.com/x509_public_certificate.pem&quot;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DataInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CertificateFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CertificateFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X.509&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Certificate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generateCertificate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;PublicKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPublicKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Signature&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signetcheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Signature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SHA1withRSA&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;signetcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initVerify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;signetcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2sign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signetcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decodedSign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;authenticate fail, &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * build string for sign
 *
 * @param method,  http method
 * @param uri,     http uri
 * @param headers, http headers
 * @return String fro sign
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSignStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//注意大小写&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeGetHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;content-md5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//注意大小写&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeGetHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;content-type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//注意大小写&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeGetHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x-mns-&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;safeGetHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;containsKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;需要注意的是由于主题默认的重试策略为 &lt;a href=&quot;https://help.aliyun.com/document_detail/27481.html?spm=a2c4g.11186623.2.5.RCmDd6&quot;&gt;EXPONENTIAL_DECAY_RETRY&lt;/a&gt; ，上面的程序需要在[5s]之类返回[204]httpcode，否则阿里认为该推送为不成功。
即，按照重试规则来重新推送数据直到收到204代码为止&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;代码虽然很多，但是不复杂，其实就是对request进行解析，进行验证，把oss包含信息取出来，最终获取到base64编码的文件信息。&lt;/p&gt;

&lt;h3 id=&quot;第三步检验成果&quot;&gt;第三步：检验成果&lt;/h3&gt;

&lt;p&gt;把项目启动，然后使用&lt;a href=&quot;https://help.aliyun.com/document_detail/61872.html&quot;&gt;oss控制台客户端&lt;/a&gt;上传文件
&lt;img src=&quot;/assets/images/post/oss-first/oss-upload-success.png&quot; alt=&quot;oss-upload-success&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当文件上传完毕后，在java控制台打印出如下数据：&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ObjectCreated:PutObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventSource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;acs:oss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2018-02-22T08:32:21.000Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;acs:oss:cn-beijing:1234346345345345:display-sjf-event-notification-test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;display-sjf-event-notification-test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ownerIdentity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1234346345345345&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;virtualBucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;object&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deltaSize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;312148&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eTag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D9703079D307A57C4967B30AC36FCA81&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20170731095417740.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;312148&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ossSchemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ruleId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oss-upload-success-img-http&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;region&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ch-china&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestParameters&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sourceIPAddress&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.0.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responseElements&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5A815115776D389D9FE118C1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;userIdentity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;principalId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;12345678934534534&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//参数解释&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//事件通知类型&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventSource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//消息源，固定为&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;acs:oss&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//事件事件，格式为ISO&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-8601&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eventVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//版本号，目前为&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//bucket的唯一标识符，格式为&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;acs:oss:region:uid:bucket&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//bucket名称&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ownerIdentity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//bucket的owner&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;object&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deltaSize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//object大小的变化量，比如新增一个文件，这个值就是文件大小，如果是覆盖一个文件，这个值就是新文件与旧文件的差值，因此可能为负数&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eTag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//object的etag，与GetObject()请求返回的ETag头的内容相同&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//object名称&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//可变项，只有在ObjectCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;AppendObject事件中才有，表示此次请求开始append的位置，注意是从&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;开始&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readFrom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//可变项，只有在ObjectDownloaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;GetObject事件中才有，表示文件开始读取的位置，如果不是Range请求，则此项为&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，否则则是Range请求的开始字节，注意是从&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;开始&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readTo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//可变项，只有在ObjectDownloaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;GetObject事件中才有，表示文件最后读取的位置，如果不是Range请求，则此项为文件的大小，否则则是Range请求的结束字节增&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//object大小&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ossSchemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//此字段域的版本号，目前为&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ruleId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GetObject&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//此事件匹配的规则ID&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;region&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//bucket所在的region&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestParameters&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sourceIPAddress&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//请求的源IP&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responseElements&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//请求对应的requestid&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;userIdentity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;principalId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//请求发起者的uid&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xVars&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//oss的callback功能中的自定义参数&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x:callback-var1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x:vallback-var2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;

&lt;p&gt;在信息化时代，我们需要跟上时代的步伐，与时俱进。本篇关于oss事件通知的介绍到此结束，希望对家有所帮助。&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="oss" /><category term="阿里云" /><summary type="html">初识oss it技术更新换代太快了，我们的思想也必须跟上才行。 最近项目里需要用到文件上传，我想想挺简单的啊，关于spring mvc文件上传网上的示例太多了啊，抄一抄，三下五除二就弄好了。 好景不长，文件上传问题太多了，虽然从头到尾只出了两个问题，但是用户体验太差了，该怎么办呢？又要支持大文件，又要支持批量， 又在web端，感觉再好的插件也拯救不了我了。于是问问公司的前辈，才刚说上几句，前辈就说怎么不用oss？ 啥？oss是什么？oss（Object Storage Service）即对象存储服务。 海量、安全、低成本、高可靠的云存储服务，提供99.999999999%的数据可靠性。 使用RESTful API 可以在互联网任何位置存储和访问，容量和处理能力弹性扩展，多种存储类型供选择全面优化存储成本。 了解到这里，我感觉这个就是能拯救我的方案了，立马查阅文档开始试试。 确定使用场景 根据之前的需求，用户通过网站上传图片到服务器上，然后对图片进行识别处理。 改用oss方案后，用户通过使用oss控制台客户端上传文件,项目监听到文件上传完成，再获取资源进行识别处理。 使用oss之后逻辑稍有改变，由于文件存放不在同一个地方，这里需要使用oss提供的事件通知来完成。 oss事件通知整体架构图如下（借用图一张） 由图中可以看到，oss事件通知提供了两种方式： HttpServer http的方式，即配置一个自己项目的访问地址（公网），当匹配规则匹配到时，往该地址推送数据 MNS Queue 队列的方式，即在项目中订阅oss提供的主题，获取匹配规则推送的数据 这里要介绍的是Http方式，后面如果需要再使用队列方式试试。 小试牛刀 关于oss事件通知的配置，阿里云已经提供了一篇文档 如何使用OSS事件通知功能？， 虽然讲的很清楚了（事后才觉得清楚，在没会之前是蒙圈的），但我觉得有必要把一些要点再提一下，少踩坑！ 第一步：配置事件通知 简单理解，就是当bucket有文件变化（上传，覆盖，删除，追加……）时给予通知 帮助文档提供的截图和截止文章当前时间已经有所不同，下面带大家一步一步配置 首先进入oss管理控制台如下图： 选中bucket，右侧页面进入到该bucket的相关信息，然后点击【事件通知】，由于我已经创建了一条规则，所以这里 能看到有一条规则 点击【创建规则】,在右侧会弹出界面，如下图所示，需要填写规则名称，事件类型，资源描述，接受终端 规则名称 规则的唯一标识，同一账号同一 Region 同一产品下规则名称不能重名。字符必须是英文，数字，横划线，长度不超过 128 个 事件类型 选择您想要触发通知的事件，可以选择多个。同样的事件不可以多次配置在同一资源上 PutObject ，创建/覆盖文件：简单上传 这里我只举一个例子，更多其他的事件类型参考事件类型列表 资源描述 资源描述可以是全名、前缀、后缀以及前后缀，不同资源描述不能有交集。 在本次实例中，我配置了全名，前后缀 第一行代表固定文件名（movie.zip）上传，就会触发事件 第二行代表以m开头的文件上传，就会触发事件 第三行代表.jpg格式的文件上传，就会触发事件 在我第一次使用时这个地方没有理解资源描述是什么意思，我上传文件怎么都不触发，直到发送工单，才得知是这里的问题 接受终端 有两种可以选择，一个是http，一个是队列，本篇讲的是http方式，这里我选择http http://domain.com:8080/oss/listener 地址是公网能够访问到的 填写完毕后，点击底部的【确认】按钮确认添加该规则，确认之后就会像之前看到的，出现一条规则。 这里需要注意的是，每添加一条规则会自动创建一条对应的主题，可以在消息服务控制台查看到该主题，如下图： 还需要注意的是图中指出的温馨提示,主题实例是会产生费用的 到这里，在阿里云控制台配置的工作就已经完成了，接下来要做的就是实现接受消息 第二步：接受消息通知 在上一步接受终端操作中我配置了一个可以公网访问的地址http://domain.com:8080/oss/listener，他的作用就是当规则匹配之后 oss会向该地址发送消息。根据oss技术人员提供的信息，我们可以从 MNS Java SDK 这个页面下载示例代码 解压下载后的文件，我们需要关注的是 HttpEndpoint.java 这个文件，这里对该文件代码不做详细的解释，根据自己项目的环境，做相应改动即可 我的项目环境是spring mvc，下面贴出我已经调试好的代码： import lombok.extern.slf4j.Slf4j; import org.apache.commons.codec.binary.Base64; import org.apache.http.HttpEntity; import org.apache.http.HttpStatus; import org.apache.http.entity.InputStreamEntity; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.ResponseBody; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import java.io.BufferedReader; import java.io.InputStream; import java.io.InputStreamReader; import java.io.UnsupportedEncodingException; import java.util.Enumeration; import java.util.HashMap; import java.util.Locale; import java.util.Map; /** * oss文件上传成功 * * @return */ @PostMapping(value = &quot;/oss/listener&quot;) @ResponseBody public ResponseEntity&amp;lt;String&amp;gt; ossfileuploadsuccess(HttpServletRequest request, HttpServletResponse response) { log.info(&quot;oss客户端上传文件&quot;); long start = System.currentTimeMillis(); try { HttpEntity entity = new InputStreamEntity(request.getInputStream(), request.getContentLength()); String method = request.getMethod().toUpperCase(Locale.ENGLISH); String target = request.getRequestURI(); Enumeration&amp;lt;String&amp;gt; headerNames = request.getHeaderNames(); Map&amp;lt;String, String&amp;gt; hm = new HashMap&amp;lt;&amp;gt;(); while (headerNames.hasMoreElements()) { String name = headerNames.nextElement(); String value = request.getHeader(name); log.debug(&quot;{}:{}&quot;, name, value); hm.put(name, value); } //verify request String certHeader = request.getHeader(&quot;x-mns-signing-cert-url&quot;); if (certHeader == null) { log.info(&quot;SigningCerURL Header not found&quot;); return ResponseEntity.status(HttpStatus.SC_BAD_REQUEST).body(&quot;SigningCerURL Header not found&quot;); } String cert = certHeader; if (cert.isEmpty()) { log.info(&quot;SigningCertURL empty&quot;); return ResponseEntity.status(HttpStatus.SC_BAD_REQUEST).body(&quot;SigningCertURL empty&quot;); } cert = new String(Base64.decodeBase64(cert)); log.info(&quot;SigningCertURL:\t&quot; + cert); if (!authenticate(method, target, hm, cert)) { log.info(&quot;authenticate fail&quot;); return ResponseEntity.status(HttpStatus.SC_BAD_REQUEST).body(&quot;authenticate fail&quot;); } //parser content of simplified notification InputStream is = entity.getContent(); BufferedReader reader = new BufferedReader(new InputStreamReader(is)); StringBuffer buffer = new StringBuffer(); String line = &quot;&quot;; while ((line = reader.readLine()) != null) { buffer.append(line); } String content = buffer.toString(); String result = null; byte[] messageBodyAsBytes = content.getBytes(); if (messageBodyAsBytes != null) { result = new String(Base64.decodeBase64(messageBodyAsBytes), &quot;UTF-8&quot;); } //这里的result就是文件的信息 log.info(&quot;Simplified Notification: \n {}&quot;, result); log.info(&quot;处理oss文件线程启动完毕,耗时：{}&quot;, System.currentTimeMillis() - start); } catch (UnsupportedEncodingException var4) { log.error(&quot;Not support encoding: UTF-8&quot;, var4); return ResponseEntity.status(HttpStatus.SC_INTERNAL_SERVER_ERROR).body(&quot;Not support encoding: UTF-8&quot;); } catch (Exception e) { log.error(&quot;oss文件上传监听系统错误&quot;, e); return ResponseEntity.status(HttpStatus.SC_INTERNAL_SERVER_ERROR).body(&quot;system error&quot;); } return ResponseEntity.noContent().build(); } /** * check if this request comes from MNS Server * * @param method, http method * @param uri, http uri * @param headers, http headers * @param cert, cert url * @return true if verify pass */ private Boolean authenticate(String method, String uri, Map&amp;lt;String, String&amp;gt; headers, String cert) { String str2sign = getSignStr(method, uri, headers); //System.out.println(str2sign); //这里需要注意大小写，官方给出的代码这里是大写A，在我实际操作中为小写，到底是什么，需要结合实际情况 String signature = headers.get(&quot;authorization&quot;); byte[] decodedSign = Base64.decodeBase64(signature); //get cert, and verify this request with this cert try { //String cert = &quot;http://mnstest.oss-cn-hangzhou.aliyuncs.com/x509_public_certificate.pem&quot;; URL url = new URL(cert); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); DataInputStream in = new DataInputStream(conn.getInputStream()); CertificateFactory cf = CertificateFactory.getInstance(&quot;X.509&quot;); Certificate c = cf.generateCertificate(in); PublicKey pk = c.getPublicKey(); java.security.Signature signetcheck = java.security.Signature.getInstance(&quot;SHA1withRSA&quot;); signetcheck.initVerify(pk); signetcheck.update(str2sign.getBytes()); Boolean res = signetcheck.verify(decodedSign); return res; } catch (Exception e) { e.printStackTrace(); log.warn(&quot;authenticate fail, &quot; + e.getMessage()); return false; } } /** * build string for sign * * @param method, http method * @param uri, http uri * @param headers, http headers * @return String fro sign */ private String getSignStr(String method, String uri, Map&amp;lt;String, String&amp;gt; headers) { StringBuilder sb = new StringBuilder(); sb.append(method); sb.append(&quot;\n&quot;); //注意大小写 sb.append(safeGetHeader(headers, &quot;content-md5&quot;)); sb.append(&quot;\n&quot;); //注意大小写 sb.append(safeGetHeader(headers, &quot;content-type&quot;)); sb.append(&quot;\n&quot;); //注意大小写 sb.append(safeGetHeader(headers, &quot;date&quot;)); sb.append(&quot;\n&quot;); List&amp;lt;String&amp;gt; tmp = new ArrayList&amp;lt;String&amp;gt;(); for (Map.Entry&amp;lt;String, String&amp;gt; entry : headers.entrySet()) { if (entry.getKey().startsWith(&quot;x-mns-&quot;)){ tmp.add(entry.getKey() + &quot;:&quot; + entry.getValue()); } } Collections.sort(tmp); for (String kv : tmp) { sb.append(kv); sb.append(&quot;\n&quot;); } sb.append(uri); return sb.toString(); } private String safeGetHeader(Map&amp;lt;String, String&amp;gt; headers, String name) { if (headers.containsKey(name)) { return headers.get(name); } else { return &quot;&quot;; } } 需要注意的是由于主题默认的重试策略为 EXPONENTIAL_DECAY_RETRY ，上面的程序需要在[5s]之类返回[204]httpcode，否则阿里认为该推送为不成功。 即，按照重试规则来重新推送数据直到收到204代码为止 代码虽然很多，但是不复杂，其实就是对request进行解析，进行验证，把oss包含信息取出来，最终获取到base64编码的文件信息。 第三步：检验成果 把项目启动，然后使用oss控制台客户端上传文件 当文件上传完毕后，在java控制台打印出如下数据： { &quot;events&quot;: [ { &quot;eventName&quot;: &quot;ObjectCreated:PutObject&quot;, &quot;eventSource&quot;: &quot;acs:oss&quot;, &quot;eventTime&quot;: &quot;2018-02-22T08:32:21.000Z&quot;, &quot;eventVersion&quot;: &quot;1.0&quot;, &quot;oss&quot;: { &quot;bucket&quot;: { &quot;arn&quot;: &quot;acs:oss:cn-beijing:1234346345345345:display-sjf-event-notification-test&quot;, &quot;name&quot;: &quot;display-sjf-event-notification-test&quot;, &quot;ownerIdentity&quot;: &quot;1234346345345345&quot;, &quot;virtualBucket&quot;: &quot;&quot; }, &quot;object&quot;: { &quot;deltaSize&quot;: 312148, &quot;eTag&quot;: &quot;D9703079D307A57C4967B30AC36FCA81&quot;, &quot;key&quot;: &quot;20170731095417740.png&quot;, &quot;size&quot;: 312148 }, &quot;ossSchemaVersion&quot;: &quot;1.0&quot;, &quot;ruleId&quot;: &quot;oss-upload-success-img-http&quot; }, &quot;region&quot;: &quot;ch-china&quot;, &quot;requestParameters&quot;: { &quot;sourceIPAddress&quot;: &quot;10.0.0.0&quot; }, &quot;responseElements&quot;: { &quot;requestId&quot;: &quot;5A815115776D389D9FE118C1&quot; }, &quot;userIdentity&quot;: { &quot;principalId&quot;: &quot;12345678934534534&quot; } } ] } //参数解释 { &quot;events&quot;: [ { &quot;eventName&quot;: &quot;&quot;, //事件通知类型 &quot;eventSource&quot;: &quot;&quot;, //消息源，固定为&quot;acs:oss&quot; &quot;eventTime&quot;: &quot;&quot;, //事件事件，格式为ISO-8601 &quot;eventVersion&quot;: &quot;&quot;, //版本号，目前为&quot;1.0&quot; &quot;oss&quot;: { &quot;bucket&quot;: { &quot;arn&quot;: &quot;&quot;, //bucket的唯一标识符，格式为&quot;acs:oss:region:uid:bucket&quot; &quot;name&quot;: &quot;&quot;, //bucket名称 &quot;ownerIdentity&quot;: &quot;&quot; //bucket的owner }, &quot;object&quot;: { &quot;deltaSize&quot;:, //object大小的变化量，比如新增一个文件，这个值就是文件大小，如果是覆盖一个文件，这个值就是新文件与旧文件的差值，因此可能为负数 &quot;eTag&quot;: &quot;&quot;, //object的etag，与GetObject()请求返回的ETag头的内容相同 &quot;key&quot;: &quot;&quot;, //object名称 &quot;position&quot;:, //可变项，只有在ObjectCreated:AppendObject事件中才有，表示此次请求开始append的位置，注意是从0开始 &quot;readFrom&quot;:, //可变项，只有在ObjectDownloaded:GetObject事件中才有，表示文件开始读取的位置，如果不是Range请求，则此项为0，否则则是Range请求的开始字节，注意是从0开始 &quot;readTo&quot;:,//可变项，只有在ObjectDownloaded:GetObject事件中才有，表示文件最后读取的位置，如果不是Range请求，则此项为文件的大小，否则则是Range请求的结束字节增1 &quot;size&quot;://object大小 } &quot;ossSchemaVersion&quot;: &quot;&quot;, //此字段域的版本号，目前为&quot;1.0&quot; &quot;ruleId&quot;: &quot;GetObject&quot; //此事件匹配的规则ID }, &quot;region&quot;: &quot;&quot;, //bucket所在的region &quot;requestParameters&quot;: { &quot;sourceIPAddress&quot;: &quot;&quot; //请求的源IP }, &quot;responseElements&quot;: { &quot;requestId&quot;: &quot;&quot; //请求对应的requestid }, &quot;userIdentity&quot;: { &quot;principalId&quot;: &quot;&quot; //请求发起者的uid }, &quot;xVars&quot;: { //oss的callback功能中的自定义参数 &quot;x:callback-var1&quot;: &quot;value1&quot;, &quot;x:vallback-var2&quot;: &quot;value2&quot; } } ] } 结语 在信息化时代，我们需要跟上时代的步伐，与时俱进。本篇关于oss事件通知的介绍到此结束，希望对家有所帮助。</summary></entry><entry><title type="html">用Intellij IDEA断点调试远程服务器部署的tomcat项目</title><link href="http://www.thxopen.com/ide/2018/02/04/how-to-debug-remote-host-in-intellij.html" rel="alternate" type="text/html" title="用Intellij IDEA断点调试远程服务器部署的tomcat项目" /><published>2018-02-04T00:00:00+08:00</published><updated>2018-02-04T00:00:00+08:00</updated><id>http://www.thxopen.com/ide/2018/02/04/how-to-debug-remote-host-in-intellij</id><content type="html" xml:base="http://www.thxopen.com/ide/2018/02/04/how-to-debug-remote-host-in-intellij.html">&lt;h2 id=&quot;回顾&quot;&gt;回顾&lt;/h2&gt;

&lt;p&gt;在很早之前我已经写过一篇关于 &lt;a href=&quot;/ide/2013/10/17/intellij-idea-remote-debug-project.html&quot;&gt;在intellij idea下远程调试项目&lt;/a&gt; 的文章，时隔几年，又遇到同样的情况，
再参考自己写的东西已经不适用了，我总结了一下，可能是以下几个问题&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;之前没有写清楚&lt;/li&gt;
  &lt;li&gt;时隔久远，已经更新了，不再适用当前&lt;/li&gt;
  &lt;li&gt;没有完全理解，草率就记了，知其然不知其所以然&lt;/li&gt;
  &lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;发现疑点一相同的目录下&quot;&gt;发现疑点一：相同的目录下&lt;/h2&gt;
&lt;p&gt;写上一篇文章的时候环境都是windows，所以可以把代码放在相同的目录下，但是这次环境不一样了一个是windows一个是linux，
怎么放到相同的目录下呢？&lt;/p&gt;

&lt;h2 id=&quot;发现疑点二配置remote-tomcat&quot;&gt;发现疑点二：配置remote tomcat&lt;/h2&gt;
&lt;p&gt;由于第一步已经发生了变化，导致第二步不知道该怎么配置了&lt;/p&gt;

&lt;p&gt;为了搞清楚这两个疑点，我开始在网上重新查找了相关文章，看了几篇，在其中简书的一篇&lt;a href=&quot;https://www.jianshu.com/p/f902ac5d29e4&quot;&gt;IDEA远程调试Tomcat&lt;/a&gt;文章解决了我的两个疑点&lt;/p&gt;

&lt;h2 id=&quot;拨开云雾见青天&quot;&gt;拨开云雾见青天&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;原来并不需要相同的目录，服务器代码位置和本地代码位置没有关系&lt;/li&gt;
  &lt;li&gt;应该是配置Remote而不是Tomcat Server Remote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但不知为什么在上篇文章中我使用Tomcat Server Remote的方式也达到效果，对这个功能的理解应该有误差，后面再说吧。&lt;/p&gt;

&lt;h2 id=&quot;如何使用intellij-idea如何远程调试&quot;&gt;如何使用intellij idea如何远程调试？&lt;/h2&gt;

&lt;p&gt;搞清楚我的疑点，那我就可以进入正题了，如何使用intellij idea如何远程调试？一共分为2步&lt;/p&gt;

&lt;h3 id=&quot;在intellij-idea里添加remote配置&quot;&gt;在intellij idea里添加remote配置&lt;/h3&gt;

&lt;p&gt;这一步是配置你要调试的目标，服务器的地址和调试端口&lt;/p&gt;

&lt;p&gt;选择 【Select Run/Debug configuration】,【Edit Configurations…】点击左上角绿色加号，选择Remote，
这里需要填写的就是host和port，然后在【Search sources using module‘s classpath】选择自己的项目
&lt;img src=&quot;/assets/images/post/config-remote.png&quot; alt=&quot;配置Remote&quot; /&gt;&lt;/p&gt;

&lt;p&gt;复制remote JVM参数，后面需要用到&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-agentlib&lt;/span&gt;:jdwp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;transport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;n,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;编辑远程服务器tomcat-catalinash-文件&quot;&gt;编辑远程服务器tomcat catalina.sh 文件&lt;/h3&gt;

&lt;p&gt;第二步需要打开tomcat远程调试的功能，找到tomcat目录下的bin目录的catalina.sh文件&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/home/apache-tomcat-8.5.23/bin
ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;bootstrap.jar  catalina-tasks.xml            configtest.bat  digest.bat        setclasspath.sh  startup.bat      tomcat-native.tar.gz  version.bat
catalina.bat   commons-daemon.jar            configtest.sh   digest.sh         shutdown.bat     startup.sh       tool-wrapper.bat      version.sh
catalina.sh    commons-daemon-native.tar.gz  daemon.sh       setclasspath.bat  shutdown.sh      tomcat-juli.jar  tool-wrapper.sh
ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi catalina.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在catalina.sh文件里添加上面复制的jvm参数&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#   UMASK           (Optional) Override Tomcat's default UMASK of 0027&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   USE_NOHUP       (Optional) If set to the string true the start command will&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#                   use nohup so that the Tomcat process will ignore any hangup&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#                   signals. Default is &quot;false&quot; unless running on HP-UX in which&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#                   case the default is &quot;true&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -----------------------------------------------------------------------------&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# OS specific support.  $var _must_ be set to either true or false.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;大概在文件头部注释结束的地方加入，如上所示，保存并退出。&lt;/p&gt;

&lt;p&gt;ps：需要注意的是address配置的端口8000是能够外网访问的，在后面idea的配置中需要用到的&lt;/p&gt;

&lt;p&gt;两步配置完毕后，确保远程的tomcat是启动的，然后以Debug方式启动本机的Remote，当IDEA控制台打印如下语句表示成功&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connected to the target VM, address: &lt;span class=&quot;s1&quot;&gt;'192.168.0.3:8000'&lt;/span&gt;, transport: &lt;span class=&quot;s1&quot;&gt;'socket'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个时候就可以远程调试代码了&lt;/p&gt;</content><author><name>单思义</name><email>keith@thxopen.com</email></author><category term="intellij idea" /><category term="远程调试" /><category term="tomcat" /><summary type="html">回顾 在很早之前我已经写过一篇关于 在intellij idea下远程调试项目 的文章，时隔几年，又遇到同样的情况， 再参考自己写的东西已经不适用了，我总结了一下，可能是以下几个问题 之前没有写清楚 时隔久远，已经更新了，不再适用当前 没有完全理解，草率就记了，知其然不知其所以然 …… 发现疑点一：相同的目录下 写上一篇文章的时候环境都是windows，所以可以把代码放在相同的目录下，但是这次环境不一样了一个是windows一个是linux， 怎么放到相同的目录下呢？ 发现疑点二：配置remote tomcat 由于第一步已经发生了变化，导致第二步不知道该怎么配置了 为了搞清楚这两个疑点，我开始在网上重新查找了相关文章，看了几篇，在其中简书的一篇IDEA远程调试Tomcat文章解决了我的两个疑点 拨开云雾见青天 原来并不需要相同的目录，服务器代码位置和本地代码位置没有关系 应该是配置Remote而不是Tomcat Server Remote 但不知为什么在上篇文章中我使用Tomcat Server Remote的方式也达到效果，对这个功能的理解应该有误差，后面再说吧。 如何使用intellij idea如何远程调试？ 搞清楚我的疑点，那我就可以进入正题了，如何使用intellij idea如何远程调试？一共分为2步 在intellij idea里添加remote配置 这一步是配置你要调试的目标，服务器的地址和调试端口 选择 【Select Run/Debug configuration】,【Edit Configurations…】点击左上角绿色加号，选择Remote， 这里需要填写的就是host和port，然后在【Search sources using module‘s classpath】选择自己的项目 复制remote JVM参数，后面需要用到 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 编辑远程服务器tomcat catalina.sh 文件 第二步需要打开tomcat远程调试的功能，找到tomcat目录下的bin目录的catalina.sh文件 ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin$ pwd /home/apache-tomcat-8.5.23/bin ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin$ ls bootstrap.jar catalina-tasks.xml configtest.bat digest.bat setclasspath.sh startup.bat tomcat-native.tar.gz version.bat catalina.bat commons-daemon.jar configtest.sh digest.sh shutdown.bat startup.sh tool-wrapper.bat version.sh catalina.sh commons-daemon-native.tar.gz daemon.sh setclasspath.bat shutdown.sh tomcat-juli.jar tool-wrapper.sh ubuntu@VM-179-90:/home/apache-tomcat-8.5.23/bin$ vi catalina.sh 在catalina.sh文件里添加上面复制的jvm参数 export JAVA_OPTS='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000' # UMASK (Optional) Override Tomcat's default UMASK of 0027 # # USE_NOHUP (Optional) If set to the string true the start command will # use nohup so that the Tomcat process will ignore any hangup # signals. Default is &quot;false&quot; unless running on HP-UX in which # case the default is &quot;true&quot; # ----------------------------------------------------------------------------- export JAVA_OPTS='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000' # OS specific support. $var _must_ be set to either true or false. 大概在文件头部注释结束的地方加入，如上所示，保存并退出。 ps：需要注意的是address配置的端口8000是能够外网访问的，在后面idea的配置中需要用到的 两步配置完毕后，确保远程的tomcat是启动的，然后以Debug方式启动本机的Remote，当IDEA控制台打印如下语句表示成功 Connected to the target VM, address: '192.168.0.3:8000', transport: 'socket' 这个时候就可以远程调试代码了</summary></entry></feed>